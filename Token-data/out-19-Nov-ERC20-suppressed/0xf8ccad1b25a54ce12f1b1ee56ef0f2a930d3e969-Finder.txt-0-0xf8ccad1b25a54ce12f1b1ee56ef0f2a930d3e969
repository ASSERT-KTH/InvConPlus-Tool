original result: 74 invariants, smt-simplified result: 45 invariants
transfer(_to,_value):
Requires		_to != address(0)
Requires		msg.sender != address(0)
Requires		_value <= VeriSol.Old(balances[msg.sender])
Ensures		owner == VeriSol.Old(owner)
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(totalSupply_) == totalSupply_
Ensures		VeriSol.Old(newOwner) == newOwner
Ensures		initialSupply == VeriSol.Old(initialSupply)
Ensures		_value <= balances[_to]
Ensures		balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		balances[_to] >= VeriSol.Old(balances[_to])
Lock(_holder):
Requires		VeriSol.Old(frozen[_holder]) == false
Requires		VeriSol.Old(owner) != address(0)
Requires		msg.sender != address(0)
Requires		VeriSol.Old(owner) == msg.sender
Ensures		owner != address(0)
Ensures		frozen[_holder] == true
Ensures		owner == VeriSol.Old(owner)
Ensures		owner == msg.sender
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(totalSupply_) == totalSupply_
Ensures		VeriSol.Old(newOwner) == newOwner
Ensures		initialSupply == VeriSol.Old(initialSupply)
UnLock(_holder):
Requires		VeriSol.Old(owner) != address(0)
Requires		msg.sender != address(0)
Requires		VeriSol.Old(owner) == msg.sender
Ensures		owner != address(0)
Ensures		owner == VeriSol.Old(owner)
Ensures		owner == msg.sender
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(totalSupply_) == totalSupply_
Ensures		VeriSol.Old(newOwner) == newOwner
Ensures		initialSupply == VeriSol.Old(initialSupply)
Finder:
Ensures		owner != address(0)
Ensures		decimals == 0
Ensures		initialSupply == 1000000000
Ensures		decimals <= VeriSol.SumMapping(balances)
Ensures		decimals < initialSupply
Ensures		decimals <= totalSupply_
Ensures		VeriSol.SumMapping(balances) <= initialSupply
Ensures		VeriSol.SumMapping(balances) == totalSupply_
Ensures		initialSupply >= totalSupply_
