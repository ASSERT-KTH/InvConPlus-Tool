original result: 253 invariants, smt-simplified result: 59 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		allowed[msg.sender][spender] == tokens
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == tokens => VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender]
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		VeriSol.Old(balances[msg.sender]) >= tokens
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		VeriSol.Old(balances[msg.sender]) >= balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		balances[to] >= tokens
Ensures		balances[to] >= VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[msg.sender]) == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(balances[msg.sender]) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(VeriSol.SumMapping(balances)) > balances[msg.sender]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > balances[msg.sender]
Ensures		VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[to]) => tokens + balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[to]) => VeriSol.Old(balances[to]) + tokens == balances[to]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == tokens => VeriSol.SumMapping(balances) == tokens
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > tokens => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		to != msg.sender => tokens + balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		to != msg.sender => VeriSol.Old(balances[to]) + tokens == balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[to] > balances[msg.sender]
Ensures		tokens > VeriSol.Old(balances[to]) => tokens + balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[to]) + tokens == balances[to]
Ensures		tokens > VeriSol.Old(balances[to]) => VeriSol.Old(balances[to]) + tokens == balances[to]
Ensures		to == address(0) => VeriSol.Old(balances[to]) + tokens == balances[to]
Ensures		tokens > 0 => balances[to] > 0
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[msg.sender]) >= balances[to]
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] == tokens
Ensures		VeriSol.Old(balances[to]) == 0 => balances[msg.sender] >= VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		VeriSol.Old(balances[msg.sender]) != tokens => balances[msg.sender] > 0
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => VeriSol.Old(balances[msg.sender]) < balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[msg.sender] < VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[to] > 0
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[to] > tokens
Ensures		tokens != VeriSol.Old(balances[to]) => balances[to] > 0
Ensures		tokens > VeriSol.Old(balances[to]) => VeriSol.Old(balances[msg.sender]) > balances[msg.sender]
Ensures		tokens > VeriSol.Old(balances[to]) => balances[to] > VeriSol.Old(balances[to])
Ensures		tokens < VeriSol.Old(balances[to]) => balances[to] > tokens
Ensures		to == msg.sender => VeriSol.Old(balances[msg.sender]) == balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) == tokens => VeriSol.Old(balances[msg.sender]) <= balances[to]
Ensures		to == msg.sender => balances[to] == balances[msg.sender]
Ensures		VeriSol.Old(balances[msg.sender]) == tokens => balances[to] >= balances[msg.sender]
Ensures		to == msg.sender => balances[msg.sender] >= tokens
Ensures		VeriSol.Old(balances[msg.sender]) == tokens => balances[msg.sender] <= tokens
Ensures		to == msg.sender => balances[msg.sender] == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[msg.sender]) == tokens => balances[msg.sender] <= VeriSol.Old(balances[to])
Ensures		to == msg.sender => VeriSol.Old(balances[msg.sender]) == balances[msg.sender]
Ensures		to == msg.sender => balances[to] == VeriSol.Old(balances[to])
ECTONETWORK:
Ensures		_totalSupply == 200000000000000000000000000
Ensures		VeriSol.SumMapping(balances) == 200000000000000000000000000
Ensures		decimals == 18
Ensures		_totalSupply == VeriSol.SumMapping(balances)
Ensures		_totalSupply > decimals
Ensures		VeriSol.SumMapping(balances) > decimals
