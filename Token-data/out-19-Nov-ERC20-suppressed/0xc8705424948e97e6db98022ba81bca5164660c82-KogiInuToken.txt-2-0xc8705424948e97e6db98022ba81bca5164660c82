original result: 185 invariants, smt-simplified result: 47 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		allowed[msg.sender][spender] == tokens
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => allowed[msg.sender][spender] >= VeriSol.Old(allowed[msg.sender][spender])
Ensures		tokens == VeriSol.Old(allowed[msg.sender][spender]) => allowed[msg.sender][spender] == VeriSol.Old(allowed[msg.sender][spender])
Ensures		tokens >= VeriSol.Old(allowed[msg.sender][spender]) && tokens != VeriSol.Old(allowed[msg.sender][spender]) => allowed[msg.sender][spender] > VeriSol.Old(allowed[msg.sender][spender])
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		tokens <= VeriSol.Old(balances[msg.sender])
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		balances[to] >= VeriSol.Old(balances[to])
Ensures		balances[to] >= tokens
Ensures		balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == tokens => VeriSol.SumMapping(balances) == tokens
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > tokens => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.Old(VeriSol.SumMapping(balances)) > balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) > balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens
Ensures		tokens != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] > 0
Ensures		msg.sender != to => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens
Ensures		msg.sender == to => balances[to] == balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] <= VeriSol.Old(balances[msg.sender])
Ensures		msg.sender == to => balances[to] == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[to]) <= balances[msg.sender]
Ensures		msg.sender == to => VeriSol.Old(balances[to]) == balances[msg.sender]
Ensures		msg.sender == to => tokens <= balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) < tokens => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] == tokens
Ensures		tokens > 0 => balances[to] > 0
Ensures		VeriSol.Old(balances[to]) != tokens => balances[to] > 0
Ensures		VeriSol.Old(balances[to]) < tokens => balances[to] > VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) < tokens => balances[msg.sender] < VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		msg.sender == to => balances[to] == VeriSol.Old(balances[to])
Ensures		msg.sender == to => balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= tokens => VeriSol.SumMapping(balances) >= balances[msg.sender] || balances[msg.sender] > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > tokens && VeriSol.Old(balances[to]) < tokens => VeriSol.SumMapping(balances) > VeriSol.Old(balances[to])
KogiInuToken:
Ensures		decimals == 18
Ensures		_totalSupply == 10000000000000000000000000000000000
Ensures		VeriSol.SumMapping(balances) > 0
Ensures		decimals < _totalSupply
Ensures		decimals < VeriSol.SumMapping(balances)
Ensures		_totalSupply >= VeriSol.SumMapping(balances)
