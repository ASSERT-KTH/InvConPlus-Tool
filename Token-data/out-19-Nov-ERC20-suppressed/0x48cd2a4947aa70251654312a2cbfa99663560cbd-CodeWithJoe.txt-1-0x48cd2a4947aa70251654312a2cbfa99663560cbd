original result: 185 invariants, smt-simplified result: 47 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		tokens == allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == tokens => VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender]
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		tokens <= VeriSol.Old(balances[msg.sender])
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		tokens <= balances[to]
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		VeriSol.Old(balances[msg.sender]) >= balances[msg.sender]
Ensures		to != msg.sender => balances[to] - VeriSol.Old(balances[to]) == tokens
Ensures		to != msg.sender => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == tokens => tokens == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > tokens => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.Old(VeriSol.SumMapping(balances)) > balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) > balances[msg.sender]
Ensures		tokens != VeriSol.Old(balances[to]) => balances[to] > 0
Ensures		tokens > VeriSol.Old(balances[to]) => VeriSol.Old(balances[to]) < balances[to]
Ensures		tokens > VeriSol.Old(balances[to]) => VeriSol.Old(balances[msg.sender]) > balances[msg.sender]
Ensures		tokens > VeriSol.Old(balances[to]) => balances[to] - VeriSol.Old(balances[to]) == tokens
Ensures		tokens > VeriSol.Old(balances[to]) => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		tokens != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] > 0
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => balances[to] - VeriSol.Old(balances[to]) == tokens
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		to == msg.sender => tokens <= balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[to]) <= balances[msg.sender]
Ensures		to == msg.sender => VeriSol.Old(balances[to]) == balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[msg.sender]) >= balances[to]
Ensures		to == msg.sender => VeriSol.Old(balances[msg.sender]) == balances[to]
Ensures		to == msg.sender => balances[msg.sender] == balances[to]
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] - VeriSol.Old(balances[to]) == tokens
Ensures		to == address(0) => balances[to] - VeriSol.Old(balances[to]) == tokens
Ensures		VeriSol.Old(balances[to]) == 0 => tokens == balances[to]
Ensures		to == msg.sender => VeriSol.Old(balances[to]) == balances[to]
Ensures		to == msg.sender => VeriSol.Old(balances[msg.sender]) == balances[msg.sender]
CodeWithJoe:
Ensures		decimals == 18
Ensures		_totalSupply == 384400000000000000000000000000000
Ensures		VeriSol.SumMapping(balances) == 384400000000000000000000000000000
Ensures		decimals < _totalSupply
Ensures		decimals < VeriSol.SumMapping(balances)
Ensures		_totalSupply == VeriSol.SumMapping(balances)
