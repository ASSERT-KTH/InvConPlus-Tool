original result: 160 invariants, smt-simplified result: 33 invariants
transfer(_to,_value):
Requires		msg.sender != address(0)
Requires		_to != address(0)
Requires		VeriSol.Old(LockList[msg.sender]) == false
Requires		VeriSol.Old(LockList[_to]) == false
Ensures		LockList[_to] == false
Ensures		LockList[msg.sender] == false
Ensures		totalSupply == VeriSol.Old(totalSupply)
Ensures		VeriSol.SumMapping(LockedTokens) == VeriSol.Old(VeriSol.SumMapping(LockedTokens))
Ensures		balanceOf[_to] >= VeriSol.Old(balanceOf[_to])
Ensures		balanceOf[_to] >= _value
Ensures		VeriSol.Old(VeriSol.SumMapping(balanceOf)) == VeriSol.SumMapping(balanceOf)
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		msg.sender != _to => _value + VeriSol.Old(balanceOf[_to]) == balanceOf[_to]
Ensures		VeriSol.Old(VeriSol.SumMapping(balanceOf)) == VeriSol.Old(balanceOf[_to]) => VeriSol.SumMapping(balanceOf) == VeriSol.Old(balanceOf[_to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balanceOf)) > VeriSol.Old(balanceOf[_to]) => VeriSol.SumMapping(balanceOf) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balanceOf)) > _value => VeriSol.SumMapping(balanceOf) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(LockedTokens)) < VeriSol.Old(balanceOf[_to]) => VeriSol.SumMapping(LockedTokens) < balanceOf[_to]
Ensures		VeriSol.Old(VeriSol.SumMapping(LockedTokens)) != VeriSol.Old(balanceOf[_to]) => VeriSol.SumMapping(LockedTokens) != VeriSol.Old(balanceOf[_to])
Ensures		VeriSol.Old(VeriSol.SumMapping(LockedTokens)) < VeriSol.Old(balanceOf[_to]) => balanceOf[_to] > VeriSol.Old(VeriSol.SumMapping(LockedTokens))
Ensures		VeriSol.Old(VeriSol.SumMapping(LockedTokens)) < _value => VeriSol.SumMapping(LockedTokens) < balanceOf[_to]
Ensures		VeriSol.Old(VeriSol.SumMapping(LockedTokens)) < _value => balanceOf[_to] > VeriSol.Old(VeriSol.SumMapping(LockedTokens))
Ensures		VeriSol.Old(balanceOf[_to]) != 0 => balanceOf[_to] > 0
Ensures		_value > 0 => balanceOf[_to] > 0
Ensures		VeriSol.Old(balanceOf[_to]) != _value => balanceOf[_to] > 0
Ensures		VeriSol.Old(balanceOf[_to]) == 0 => _value + VeriSol.Old(balanceOf[_to]) == balanceOf[_to]
Ensures		VeriSol.Old(balanceOf[_to]) < _value => _value + VeriSol.Old(balanceOf[_to]) == balanceOf[_to]
Ensures		VeriSol.Old(balanceOf[_to]) == 0 => balanceOf[_to] == _value
Ensures		VeriSol.Old(balanceOf[_to]) > _value => balanceOf[_to] > _value
Ensures		VeriSol.Old(balanceOf[_to]) < _value => balanceOf[_to] > VeriSol.Old(balanceOf[_to])
Ensures		msg.sender == _to => balanceOf[_to] == VeriSol.Old(balanceOf[_to])
Chellit:
Ensures		owner != address(0)
Ensures		decimals == 18
Ensures		totalSupply == VeriSol.SumMapping(balanceOf)
