original result: 111 invariants, smt-simplified result: 40 invariants
transfer(recipient,amount):
Requires		msg.sender != address(0)
Requires		recipient != address(0)
Requires		amount <= VeriSol.Old(_balances[msg.sender])
Ensures		_balances[recipient] >= VeriSol.Old(_balances[recipient])
Ensures		_balances[recipient] >= amount
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) == VeriSol.SumMapping(_balances)
Ensures		_balances[msg.sender] <= VeriSol.Old(_balances[msg.sender])
Ensures		_balances[recipient] == 0 => _balances[recipient] == amount
Ensures		_balances[recipient] == 0 => _balances[recipient] <= VeriSol.Old(_balances[msg.sender])
Ensures		_balances[recipient] == 0 => VeriSol.Old(_balances[recipient]) <= _balances[msg.sender]
Ensures		_balances[recipient] == 0 => VeriSol.Old(_balances[msg.sender]) - _balances[msg.sender] == amount
Ensures		amount > 0 => _balances[recipient] > 0
Ensures		VeriSol.Old(_balances[recipient]) != amount => _balances[recipient] > 0
Ensures		VeriSol.Old(_balances[recipient]) < amount => _balances[recipient] > VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(_balances[recipient]) < amount => _balances[msg.sender] < VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) < amount => VeriSol.Old(_balances[msg.sender]) - _balances[msg.sender] == amount
Ensures		VeriSol.Old(_balances[recipient]) == VeriSol.Old(VeriSol.SumMapping(_balances)) => VeriSol.Old(_balances[recipient]) == VeriSol.SumMapping(_balances)
Ensures		VeriSol.Old(_balances[recipient]) < VeriSol.Old(VeriSol.SumMapping(_balances)) => VeriSol.SumMapping(_balances) > 0
Ensures		VeriSol.Old(_balances[recipient]) != VeriSol.Old(_balances[msg.sender]) => VeriSol.Old(_balances[msg.sender]) - _balances[msg.sender] == amount
Ensures		amount < VeriSol.Old(VeriSol.SumMapping(_balances)) => VeriSol.SumMapping(_balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => amount <= VeriSol.SumMapping(_balances)
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => VeriSol.Old(VeriSol.SumMapping(_balances)) >= _balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) >= _balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) >= VeriSol.Old(_balances[msg.sender])
Ensures		msg.sender != recipient => VeriSol.Old(_balances[msg.sender]) - _balances[msg.sender] == amount
Ensures		_balances[recipient] != 0 => _balances[recipient] > 0
Ensures		VeriSol.Old(_balances[recipient]) == VeriSol.Old(_balances[msg.sender]) => _balances[recipient] >= _balances[msg.sender]
Ensures		msg.sender == recipient => _balances[recipient] >= _balances[msg.sender]
Ensures		msg.sender == recipient => _balances[recipient] <= VeriSol.Old(_balances[msg.sender])
Ensures		msg.sender == recipient => VeriSol.Old(_balances[recipient]) <= _balances[msg.sender]
Ensures		msg.sender == recipient => _balances[recipient] == VeriSol.Old(_balances[recipient])
Ensures		msg.sender == recipient => _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
approve(spender,value):
Requires		spender != address(0)
Requires		msg.sender != address(0)
Ensures		_allowances[msg.sender][spender] == value
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		_allowances[msg.sender][spender] == 0 => _allowances[msg.sender][spender] >= VeriSol.Old(_allowances[msg.sender][spender])
Ensures		VeriSol.Old(_allowances[msg.sender][spender]) == value => _allowances[msg.sender][spender] == VeriSol.Old(_allowances[msg.sender][spender])
DOGKINGERC20Token:
Ensures		VeriSol.SumMapping(_balances) == _totalSupply
