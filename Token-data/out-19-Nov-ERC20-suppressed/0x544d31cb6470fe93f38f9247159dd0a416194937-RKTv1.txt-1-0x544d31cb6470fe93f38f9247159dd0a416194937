original result: 119 invariants, smt-simplified result: 35 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		allowed[msg.sender][spender] == tokens
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == tokens => VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender]
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		tokens <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		balances[to] >= VeriSol.Old(balances[to])
Ensures		balances[to] >= tokens
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] == tokens
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == 0 => balances[msg.sender] >= VeriSol.Old(balances[to])
Ensures		msg.sender != to => VeriSol.Old(balances[msg.sender]) - tokens == balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == tokens => VeriSol.SumMapping(balances) == tokens
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > tokens => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) >= balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) >= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) => VeriSol.Old(VeriSol.SumMapping(balances)) >= balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[msg.sender]) - tokens == balances[msg.sender]
Ensures		tokens != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] > 0
Ensures		msg.sender == to => balances[to] == VeriSol.Old(balances[msg.sender])
Ensures		msg.sender == to => balances[msg.sender] == VeriSol.Old(balances[to])
Ensures		msg.sender == to => balances[to] == balances[msg.sender]
RKTv1:
Ensures		VeriSol.SumMapping(balances) == 100000000000000000000000
Ensures		_totalSupply == 100000000000000000000000
Ensures		decimals == 9
Ensures		VeriSol.SumMapping(balances) == _totalSupply
Ensures		VeriSol.SumMapping(balances) > decimals
Ensures		_totalSupply > decimals
