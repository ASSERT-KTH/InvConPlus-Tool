original result: 176 invariants, smt-simplified result: 44 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		tokens == allowed[msg.sender][spender]
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == tokens => VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) <= tokens && VeriSol.Old(allowed[msg.sender][spender]) != tokens => VeriSol.Old(allowed[msg.sender][spender]) < allowed[msg.sender][spender]
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		tokens <= VeriSol.Old(balances[msg.sender])
Ensures		tokens <= balances[to]
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[to]) == 0 => tokens == balances[to]
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[to]) <= balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[msg.sender]) >= balances[to]
Ensures		msg.sender != to => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens
Ensures		tokens != VeriSol.Old(balances[to]) => balances[to] > 0
Ensures		tokens > VeriSol.Old(balances[to]) => VeriSol.Old(balances[to]) < balances[to]
Ensures		tokens > VeriSol.Old(balances[to]) => balances[msg.sender] < VeriSol.Old(balances[msg.sender])
Ensures		tokens > VeriSol.Old(balances[to]) => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens
Ensures		tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => tokens == VeriSol.SumMapping(balances)
Ensures		tokens < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens
Ensures		VeriSol.Old(balances[to]) == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(balances[to]) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(VeriSol.SumMapping(balances)) => balances[msg.sender] <= VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(VeriSol.SumMapping(balances)) => balances[msg.sender] <= VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(balances[msg.sender]) <= VeriSol.SumMapping(balances)
Ensures		msg.sender == to => VeriSol.Old(balances[to]) <= balances[msg.sender]
Ensures		msg.sender == to => balances[msg.sender] <= balances[to]
Ensures		VeriSol.Old(balances[to]) == VeriSol.Old(balances[msg.sender]) => balances[msg.sender] <= balances[to]
Ensures		msg.sender == to => VeriSol.Old(balances[msg.sender]) >= balances[to]
Ensures		msg.sender == to => VeriSol.Old(balances[to]) == balances[to]
Ensures		msg.sender == to => balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		tokens > 0 => VeriSol.Old(balances[to]) <= balances[msg.sender] || VeriSol.Old(balances[to]) < balances[to]
Ensures		tokens >= VeriSol.Old(balances[to]) => VeriSol.Old(balances[msg.sender]) >= balances[to] || balances[msg.sender] != VeriSol.Old(balances[msg.sender])
KillerShiba:
Ensures		decimals == 18
Ensures		_totalSupply == 1000000000000000000000000000000000
Ensures		VeriSol.SumMapping(balances) == 1000000000000000000000000000000000
Ensures		decimals < _totalSupply
Ensures		decimals < VeriSol.SumMapping(balances)
Ensures		_totalSupply == VeriSol.SumMapping(balances)
