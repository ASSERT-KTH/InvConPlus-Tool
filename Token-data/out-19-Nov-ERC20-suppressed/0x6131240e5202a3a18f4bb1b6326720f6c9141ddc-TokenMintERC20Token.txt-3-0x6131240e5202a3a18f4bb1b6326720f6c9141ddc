original result: 149 invariants, smt-simplified result: 48 invariants
transfer(recipient,amount):
Requires		recipient != address(0)
Requires		msg.sender != address(0)
Requires		amount <= VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		VeriSol.SumMapping(_balances) == VeriSol.Old(VeriSol.SumMapping(_balances))
Ensures		_balances[recipient] >= amount
Ensures		_balances[recipient] >= VeriSol.Old(_balances[recipient])
Ensures		_balances[msg.sender] <= VeriSol.Old(_balances[msg.sender])
Ensures		amount > 0 => _balances[recipient] > 0
Ensures		VeriSol.Old(_balances[recipient]) == 0 => _balances[recipient] == amount
Ensures		VeriSol.Old(_balances[recipient]) == 0 => _balances[recipient] <= VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) == 0 => _balances[msg.sender] >= VeriSol.Old(_balances[recipient])
Ensures		amount < VeriSol.Old(VeriSol.SumMapping(_balances)) => VeriSol.SumMapping(_balances) > 0
Ensures		amount != VeriSol.Old(_balances[msg.sender]) => _balances[msg.sender] > 0
Ensures		amount != VeriSol.Old(_balances[recipient]) => _balances[recipient] > 0
Ensures		amount > VeriSol.Old(_balances[recipient]) => _balances[recipient] > VeriSol.Old(_balances[recipient])
Ensures		amount > VeriSol.Old(_balances[recipient]) => _balances[msg.sender] < VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) >= amount
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) >= _balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) != VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) != VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.Old(_balances[msg.sender]) => _balances[msg.sender] <= VeriSol.Old(VeriSol.SumMapping(_balances))
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) == VeriSol.Old(_balances[recipient]) => VeriSol.SumMapping(_balances) == VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > VeriSol.Old(_balances[recipient]) => VeriSol.SumMapping(_balances) > 0
Ensures		VeriSol.Old(_balances[recipient]) != 0 => _balances[recipient] > 0
Ensures		amount == VeriSol.Old(VeriSol.SumMapping(_balances)) => VeriSol.SumMapping(_balances) <= VeriSol.Old(_balances[msg.sender])
Ensures		recipient == msg.sender => _balances[recipient] == _balances[msg.sender]
Ensures		amount == VeriSol.Old(_balances[msg.sender]) => _balances[recipient] >= _balances[msg.sender]
Ensures		VeriSol.Old(_balances[msg.sender]) == VeriSol.Old(_balances[recipient]) => _balances[recipient] >= _balances[msg.sender]
Ensures		recipient == msg.sender => _balances[recipient] == VeriSol.Old(_balances[msg.sender])
Ensures		amount == VeriSol.Old(_balances[msg.sender]) => amount >= _balances[msg.sender]
Ensures		recipient == msg.sender => amount <= _balances[msg.sender]
Ensures		recipient == msg.sender => _balances[msg.sender] == VeriSol.Old(_balances[recipient])
Ensures		recipient == msg.sender => _balances[recipient] == VeriSol.Old(_balances[recipient])
Ensures		recipient == msg.sender => _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
Ensures		amount > 0 => _balances[msg.sender] != VeriSol.Old(_balances[msg.sender]) || _balances[msg.sender] >= VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(_balances[recipient]) == 0 && amount <= VeriSol.Old(VeriSol.SumMapping(_balances)) => VeriSol.SumMapping(_balances) >= _balances[recipient]
Ensures		VeriSol.Old(_balances[recipient]) == 0 && amount < VeriSol.Old(_balances[msg.sender]) => _balances[recipient] < VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) == 0 && amount < VeriSol.Old(_balances[msg.sender]) => _balances[msg.sender] > VeriSol.Old(_balances[recipient])
Ensures		amount <= VeriSol.Old(VeriSol.SumMapping(_balances)) && amount > VeriSol.Old(_balances[recipient]) => VeriSol.SumMapping(_balances) > 0
Ensures		amount != VeriSol.Old(_balances[msg.sender]) && recipient == msg.sender => _balances[recipient] > 0
Ensures		amount > 0 => _balances[msg.sender] < VeriSol.Old(_balances[msg.sender]) || _balances[msg.sender] != VeriSol.Old(_balances[msg.sender]) || _balances[msg.sender] >= VeriSol.Old(_balances[recipient]) || _balances[msg.sender] > VeriSol.Old(_balances[recipient])
approve(spender,value):
Requires		spender != address(0)
Requires		msg.sender != address(0)
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		value == _allowances[msg.sender][spender]
Ensures		value == VeriSol.Old(_allowances[msg.sender][spender]) => VeriSol.Old(_allowances[msg.sender][spender]) == _allowances[msg.sender][spender]
Ensures		VeriSol.Old(_allowances[msg.sender][spender]) == 0 => VeriSol.Old(_allowances[msg.sender][spender]) <= _allowances[msg.sender][spender]
TokenMintERC20Token:
Ensures		VeriSol.SumMapping(_balances) == _totalSupply
