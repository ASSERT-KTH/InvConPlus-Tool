original result: 326 invariants, smt-simplified result: 102 invariants
transfer(_to,_value):
Requires		_to != address(0)
Requires		msg.sender != address(0)
Requires		_value <= VeriSol.Old(balances[msg.sender])
Ensures		owner == VeriSol.Old(owner)
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(totalSupply_) == totalSupply_
Ensures		VeriSol.Old(newOwner) == newOwner
Ensures		initialSupply == VeriSol.Old(initialSupply)
Ensures		_value <= balances[_to]
Ensures		balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		balances[_to] >= VeriSol.Old(balances[_to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == _value => VeriSol.SumMapping(balances) == _value
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > _value => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) > _value
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) > balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.Old(VeriSol.SumMapping(balances)) > balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[_to]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[_to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[_to]) => VeriSol.SumMapping(balances) > 0
Ensures		_to != msg.sender => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == _value
Ensures		VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[_to]) => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == _value
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(balances[_to]) != 0 => balances[_to] > 0
Ensures		_value != VeriSol.Old(balances[_to]) => balances[_to] > 0
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[_to]) => balances[_to] > 0
Ensures		_value > VeriSol.Old(balances[_to]) => balances[msg.sender] < VeriSol.Old(balances[msg.sender])
Ensures		_value > VeriSol.Old(balances[_to]) => balances[_to] > VeriSol.Old(balances[_to])
Ensures		VeriSol.Old(balances[_to]) == 0 => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == _value
Ensures		_value > VeriSol.Old(balances[_to]) => VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == _value
Ensures		VeriSol.Old(balances[_to]) == 0 => _value == balances[_to]
Ensures		VeriSol.Old(balances[_to]) == 0 => balances[msg.sender] >= VeriSol.Old(balances[_to])
Ensures		VeriSol.Old(balances[_to]) == 0 => balances[_to] <= VeriSol.Old(balances[msg.sender])
Ensures		_value != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] > 0
Ensures		_value < VeriSol.Old(balances[_to]) => _value < balances[_to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[_to]) => balances[msg.sender] < balances[_to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[_to]) => balances[msg.sender] < VeriSol.Old(balances[_to])
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[_to]) => balances[_to] > VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[_to]) => _value < balances[_to]
Ensures		_value == VeriSol.Old(balances[msg.sender]) => _value >= balances[msg.sender]
Ensures		_to == msg.sender => _value <= balances[msg.sender]
Ensures		_to == msg.sender => balances[msg.sender] == balances[_to]
Ensures		_value == VeriSol.Old(balances[msg.sender]) => balances[msg.sender] <= balances[_to]
Ensures		_to == msg.sender => balances[msg.sender] == VeriSol.Old(balances[_to])
Ensures		_value == VeriSol.Old(balances[msg.sender]) => balances[msg.sender] <= VeriSol.Old(balances[_to])
Ensures		_to == msg.sender => balances[_to] == VeriSol.Old(balances[msg.sender])
Ensures		_value == VeriSol.Old(balances[msg.sender]) => balances[_to] >= VeriSol.Old(balances[msg.sender])
Ensures		_to == msg.sender => balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		_to == msg.sender => balances[_to] == VeriSol.Old(balances[_to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) && _value > VeriSol.Old(balances[_to]) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[_to]) && _value < VeriSol.Old(balances[_to]) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[_to]) && VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(balances[_to]) => VeriSol.SumMapping(balances) > VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[_to]) && VeriSol.Old(VeriSol.SumMapping(balances)) == _value => balances[_to] > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[_to]) && _to == msg.sender => VeriSol.Old(VeriSol.SumMapping(balances)) != balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[_to]) && _to == msg.sender => VeriSol.SumMapping(balances) != balances[_to]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[_to]) && _to == msg.sender => VeriSol.SumMapping(balances) != VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[_to]) && _to == msg.sender => VeriSol.Old(VeriSol.SumMapping(balances)) != balances[_to]
Ensures		VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[_to]) && _value == VeriSol.Old(balances[_to]) => balances[msg.sender] > 0
Ensures		VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(balances[_to]) => balances[_to] > 0 || _value == balances[msg.sender]
Ensures		_to == msg.sender => balances[_to] > 0 || _value == balances[msg.sender]
Ensures		_value == VeriSol.Old(balances[msg.sender]) => balances[_to] > 0 || _value == balances[msg.sender]
Lock(_holder):
Requires		VeriSol.Old(frozen[_holder]) == false
Requires		VeriSol.Old(owner) != address(0)
Requires		msg.sender != address(0)
Requires		VeriSol.Old(owner) == msg.sender
Ensures		owner != address(0)
Ensures		frozen[_holder] == true
Ensures		owner == VeriSol.Old(owner)
Ensures		owner == msg.sender
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(totalSupply_) == totalSupply_
Ensures		VeriSol.Old(newOwner) == newOwner
Ensures		initialSupply == VeriSol.Old(initialSupply)
Ensures		_holder == msg.sender => owner == _holder
UnLock(_holder):
Requires		VeriSol.Old(owner) != address(0)
Requires		msg.sender != address(0)
Requires		VeriSol.Old(owner) == msg.sender
Ensures		owner != address(0)
Ensures		owner == VeriSol.Old(owner)
Ensures		owner == msg.sender
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(totalSupply_) == totalSupply_
Ensures		VeriSol.Old(newOwner) == newOwner
Ensures		initialSupply == VeriSol.Old(initialSupply)
Ensures		_holder == address(0) => frozen[_holder] != true
Ensures		VeriSol.Old(owner) == _holder => frozen[_holder] != true
Ensures		_holder == msg.sender => owner == _holder
Ensures		_holder == msg.sender => frozen[_holder] != true
Ensures		VeriSol.Old(frozen[_holder]) != false => frozen[_holder] != true
Ensures		_holder != msg.sender && VeriSol.Old(owner) == _holder => frozen[_holder] == true
Ensures		_holder == address(0) && _holder == msg.sender => frozen[_holder] == true
Finder:
Ensures		owner != address(0)
Ensures		decimals == 0
Ensures		initialSupply == 1000000000
Ensures		decimals <= VeriSol.SumMapping(balances)
Ensures		decimals < initialSupply
Ensures		decimals <= totalSupply_
Ensures		VeriSol.SumMapping(balances) <= initialSupply
Ensures		VeriSol.SumMapping(balances) == totalSupply_
Ensures		initialSupply >= totalSupply_
