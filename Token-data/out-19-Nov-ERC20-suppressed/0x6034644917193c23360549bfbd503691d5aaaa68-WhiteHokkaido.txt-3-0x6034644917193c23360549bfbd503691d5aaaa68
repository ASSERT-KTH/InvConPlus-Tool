original result: 178 invariants, smt-simplified result: 50 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		tokens == allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == tokens => VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender]
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => VeriSol.Old(allowed[msg.sender][spender]) != allowed[msg.sender][spender] || allowed[msg.sender][spender] != 115792089237316195423570985008687907853269984665640564039457584007913129639935
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		tokens <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		balances[to] >= VeriSol.Old(balances[to])
Ensures		balances[to] >= tokens
Ensures		VeriSol.Old(uint256(decimals)) == decimals
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		VeriSol.Old(balances[msg.sender]) >= balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] == tokens
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[to]) <= balances[msg.sender]
Ensures		tokens > 0 => balances[to] > 0
Ensures		msg.sender != to => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) != tokens => balances[to] > 0
Ensures		VeriSol.Old(balances[to]) < tokens => balances[to] > VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) < tokens => VeriSol.Old(balances[msg.sender]) > balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) < tokens => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) == tokens
Ensures		VeriSol.Old(balances[msg.sender]) == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > balances[msg.sender]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(VeriSol.SumMapping(balances)) > balances[msg.sender]
Ensures		tokens < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		msg.sender == to => balances[to] == VeriSol.Old(balances[msg.sender])
Ensures		msg.sender == to => VeriSol.Old(balances[to]) == balances[msg.sender]
Ensures		tokens != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] > 0
Ensures		msg.sender == to => balances[to] == balances[msg.sender]
Ensures		msg.sender == to => tokens <= balances[msg.sender]
Ensures		msg.sender == to => balances[to] == VeriSol.Old(balances[to])
Ensures		msg.sender == to => VeriSol.Old(balances[msg.sender]) == balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) <= tokens && tokens != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] + tokens == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) <= tokens && msg.sender == to => tokens == balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) < tokens && tokens == VeriSol.Old(balances[msg.sender]) => balances[to] != balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) < tokens && tokens == VeriSol.Old(balances[msg.sender]) => tokens != balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) != tokens && tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) != VeriSol.Old(balances[to])
WhiteHokkaido:
Ensures		_totalSupply == 100000000000000000000000000000
Ensures		VeriSol.SumMapping(balances) > 0
Ensures		decimals == 18
Ensures		_totalSupply >= VeriSol.SumMapping(balances)
Ensures		_totalSupply > decimals
Ensures		VeriSol.SumMapping(balances) > decimals
