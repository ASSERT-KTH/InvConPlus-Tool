original result: 283 invariants, smt-simplified result: 47 invariants
transfer(to,tokens):
Requires		msg.sender != address(0)
Requires		tokens <= VeriSol.Old(balances[msg.sender])
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		VeriSol.Old(_totalSupply) == _totalSupply
Ensures		tokens <= balances[to]
Ensures		balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) == tokens
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) > balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[msg.sender]) => VeriSol.SumMapping(balances) != VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) > VeriSol.Old(balances[msg.sender]) => balances[msg.sender] < VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		tokens < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(balances[to]) == 0 => tokens == balances[to]
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[msg.sender]) >= balances[to]
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[to]) <= balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) == 0 => balances[to] - tokens == VeriSol.Old(balances[to])
Ensures		msg.sender != to => balances[to] - tokens == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) > tokens => tokens < balances[to]
Ensures		VeriSol.Old(balances[to]) < tokens => VeriSol.Old(balances[to]) < balances[to]
Ensures		VeriSol.Old(balances[to]) < tokens => balances[msg.sender] < VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) < tokens => balances[to] - tokens == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) > VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[to]) > balances[msg.sender]
Ensures		VeriSol.Old(balances[to]) > VeriSol.Old(balances[msg.sender]) => balances[msg.sender] < balances[to]
Ensures		VeriSol.Old(balances[to]) > VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[msg.sender]) < balances[to]
Ensures		VeriSol.Old(balances[to]) > VeriSol.Old(balances[msg.sender]) => tokens < balances[to]
Ensures		VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) => balances[to] - tokens == VeriSol.Old(balances[to])
Ensures		tokens >= VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[to]) >= balances[msg.sender]
Ensures		tokens >= VeriSol.Old(balances[msg.sender]) => tokens >= balances[msg.sender]
Ensures		tokens >= VeriSol.Old(balances[msg.sender]) => balances[msg.sender] <= balances[to]
Ensures		tokens >= VeriSol.Old(balances[msg.sender]) => VeriSol.Old(balances[msg.sender]) <= balances[to]
Ensures		tokens != VeriSol.Old(balances[msg.sender]) => balances[msg.sender] > 0
Ensures		tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) <= VeriSol.Old(balances[msg.sender])
Ensures		msg.sender == to => VeriSol.Old(balances[to]) == balances[msg.sender]
Ensures		msg.sender == to => tokens <= balances[msg.sender]
Ensures		msg.sender == to => balances[msg.sender] == balances[to]
Ensures		msg.sender == to => VeriSol.Old(balances[msg.sender]) == balances[to]
Ensures		to == address(0) => balances[to] - tokens == VeriSol.Old(balances[to])
Ensures		msg.sender == to => VeriSol.Old(balances[to]) == balances[to]
Ensures		msg.sender == to => balances[msg.sender] == VeriSol.Old(balances[msg.sender])
CodeWithJoe:
Ensures		decimals == 18
Ensures		VeriSol.SumMapping(balances) == 3000000000000000000000000000
Ensures		_totalSupply == 3000000000000000000000000000
Ensures		decimals < VeriSol.SumMapping(balances)
Ensures		decimals < _totalSupply
Ensures		VeriSol.SumMapping(balances) == _totalSupply
