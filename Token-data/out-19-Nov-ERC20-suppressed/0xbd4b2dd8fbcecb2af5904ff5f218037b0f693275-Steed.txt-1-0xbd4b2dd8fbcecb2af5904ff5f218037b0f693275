original result: 211 invariants, smt-simplified result: 48 invariants
transfer(recipient,amount):
Requires		msg.sender != address(0)
Requires		recipient != address(0)
Requires		VeriSol.Old(_balances[msg.sender]) >= amount
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) == VeriSol.SumMapping(_balances)
Ensures		_balances[recipient] >= VeriSol.Old(_balances[recipient])
Ensures		_balances[recipient] >= amount
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		_balances[msg.sender] <= VeriSol.Old(_balances[msg.sender])
Ensures		amount > 0 => _balances[recipient] > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) == VeriSol.Old(_balances[recipient]) => VeriSol.SumMapping(_balances) == VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > VeriSol.Old(_balances[recipient]) => VeriSol.SumMapping(_balances) > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > VeriSol.Old(_balances[msg.sender]) => VeriSol.Old(VeriSol.SumMapping(_balances)) > _balances[msg.sender]
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > VeriSol.Old(_balances[msg.sender]) => _balances[msg.sender] < VeriSol.SumMapping(_balances)
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) == VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) == VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) > amount
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > amount => VeriSol.SumMapping(_balances) > 0
Ensures		msg.sender != recipient => amount + _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) != VeriSol.Old(_balances[msg.sender]) => amount + _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) != 0 => _balances[recipient] > 0
Ensures		VeriSol.Old(_balances[recipient]) != amount => _balances[recipient] > 0
Ensures		VeriSol.Old(VeriSol.SumMapping(_balances)) > VeriSol.Old(_balances[msg.sender]) => VeriSol.SumMapping(_balances) > 0
Ensures		VeriSol.Old(_balances[recipient]) < amount => _balances[recipient] > VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(_balances[recipient]) == 0 => amount + _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) < amount => amount + _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) == 0 => _balances[recipient] <= VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) == 0 => _balances[recipient] == amount
Ensures		VeriSol.Old(_balances[recipient]) == 0 => _balances[msg.sender] >= VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(_balances[recipient]) > amount => _balances[recipient] > amount
Ensures		VeriSol.Old(_balances[msg.sender]) <= amount => _balances[recipient] >= _balances[msg.sender]
Ensures		VeriSol.Old(_balances[msg.sender]) <= amount => _balances[recipient] >= VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[msg.sender]) <= amount => _balances[msg.sender] <= VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(_balances[msg.sender]) <= amount => _balances[msg.sender] <= amount
Ensures		VeriSol.Old(_balances[msg.sender]) != amount => _balances[msg.sender] > 0
Ensures		msg.sender == recipient => _balances[recipient] == _balances[msg.sender]
Ensures		VeriSol.Old(_balances[recipient]) == VeriSol.Old(_balances[msg.sender]) => _balances[recipient] >= _balances[msg.sender]
Ensures		msg.sender == recipient => _balances[recipient] == VeriSol.Old(_balances[msg.sender])
Ensures		VeriSol.Old(_balances[recipient]) == VeriSol.Old(_balances[msg.sender]) => _balances[recipient] >= VeriSol.Old(_balances[msg.sender])
Ensures		msg.sender == recipient => _balances[msg.sender] == VeriSol.Old(_balances[recipient])
Ensures		VeriSol.Old(_balances[recipient]) == VeriSol.Old(_balances[msg.sender]) => _balances[msg.sender] <= VeriSol.Old(_balances[recipient])
Ensures		msg.sender == recipient => _balances[msg.sender] >= amount
Ensures		msg.sender == recipient => _balances[recipient] == VeriSol.Old(_balances[recipient])
Ensures		msg.sender == recipient => _balances[msg.sender] == VeriSol.Old(_balances[msg.sender])
approve(spender,value):
Requires		spender != address(0)
Requires		msg.sender != address(0)
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		value == _allowances[msg.sender][spender]
Ensures		value != VeriSol.Old(_allowances[msg.sender][spender]) => VeriSol.Old(_allowances[msg.sender][spender]) != _allowances[msg.sender][spender]
Steed:
Ensures		VeriSol.SumMapping(_balances) == _totalSupply
