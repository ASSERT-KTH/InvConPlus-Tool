original result: 470 invariants, smt-simplified result: 64 invariants
approve(spender,tokens):
Requires		msg.sender != address(0)
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		tokens == allowed[msg.sender][spender]
Ensures		tokens == VeriSol.Old(allowed[msg.sender][spender]) => allowed[msg.sender][spender] == VeriSol.Old(allowed[msg.sender][spender])
Ensures		VeriSol.Old(allowed[msg.sender][spender]) == 0 => allowed[msg.sender][spender] >= VeriSol.Old(allowed[msg.sender][spender])
Ensures		tokens >= VeriSol.Old(allowed[msg.sender][spender]) && tokens != VeriSol.Old(allowed[msg.sender][spender]) => allowed[msg.sender][spender] > VeriSol.Old(allowed[msg.sender][spender])
transfer(to,tokens):
Requires		msg.sender != address(0)
Ensures		decimals == VeriSol.Old(uint256(decimals))
Ensures		_totalSupply == VeriSol.Old(_totalSupply)
Ensures		tokens <= balances[to]
Ensures		balances[to] >= VeriSol.Old(balances[to])
Ensures		tokens > 0 => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		tokens < VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > 0
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(VeriSol.SumMapping(balances)) => balances[msg.sender] < VeriSol.Old(VeriSol.SumMapping(balances))
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(VeriSol.SumMapping(balances)) => balances[msg.sender] < VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[msg.sender]) == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(balances[msg.sender]) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[msg.sender]) != VeriSol.Old(VeriSol.SumMapping(balances)) => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => tokens == VeriSol.SumMapping(balances)
Ensures		tokens != VeriSol.Old(VeriSol.SumMapping(balances)) => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		tokens != VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) == VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) != 0 => balances[to] > 0
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[to] > 0
Ensures		tokens != VeriSol.Old(balances[to]) => balances[to] > 0
Ensures		VeriSol.Old(balances[msg.sender]) > 0 => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[to]) == 0 => balances[msg.sender] >= VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[to]) == 0 => VeriSol.Old(balances[msg.sender]) >= balances[to]
Ensures		VeriSol.Old(balances[to]) == 0 => tokens == balances[to]
Ensures		to == msg.sender => balances[msg.sender] == VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[msg.sender]) != tokens => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[msg.sender]) <= tokens => balances[msg.sender] <= tokens
Ensures		VeriSol.Old(balances[msg.sender]) <= tokens => balances[msg.sender] <= balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) <= tokens => balances[msg.sender] <= VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[msg.sender]) <= tokens => VeriSol.Old(balances[msg.sender]) <= balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) != tokens => VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		VeriSol.Old(balances[msg.sender]) != tokens => balances[msg.sender] > 0
Ensures		VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[to]) => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[msg.sender] < balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => balances[msg.sender] < VeriSol.Old(balances[to])
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => VeriSol.Old(balances[msg.sender]) < balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => tokens < balances[to]
Ensures		VeriSol.Old(balances[msg.sender]) < VeriSol.Old(balances[to]) => VeriSol.Old(balances[to]) + tokens != balances[msg.sender]
Ensures		tokens != VeriSol.Old(balances[to]) => balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
Ensures		tokens != VeriSol.Old(balances[to]) => VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
Ensures		tokens > VeriSol.Old(balances[to]) => balances[to] > VeriSol.Old(balances[to])
Ensures		tokens < VeriSol.Old(balances[to]) => tokens < balances[to]
Ensures		to == msg.sender => balances[msg.sender] >= tokens
Ensures		to == msg.sender => balances[msg.sender] == balances[to]
Ensures		to == msg.sender => balances[msg.sender] == VeriSol.Old(balances[to])
Ensures		to == msg.sender => VeriSol.Old(balances[msg.sender]) == balances[to]
Ensures		to == msg.sender => balances[to] == VeriSol.Old(balances[to])
Ensures		tokens > 0 && tokens <= VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.SumMapping(balances) > 0
Ensures		tokens > 0 => tokens != VeriSol.SumMapping(balances) || VeriSol.SumMapping(balances) > 0
Ensures		tokens > 0 && VeriSol.Old(balances[msg.sender]) == tokens => VeriSol.Old(balances[to]) + tokens != balances[msg.sender]
Ensures		tokens < VeriSol.Old(VeriSol.SumMapping(balances)) && tokens >= VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) > VeriSol.Old(balances[to])
Ensures		VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[to]) && VeriSol.Old(VeriSol.SumMapping(balances)) != VeriSol.Old(balances[to]) => VeriSol.SumMapping(balances) > VeriSol.Old(balances[to])
Ensures		tokens == VeriSol.Old(VeriSol.SumMapping(balances)) => VeriSol.Old(balances[msg.sender]) <= VeriSol.SumMapping(balances) || balances[msg.sender] != 0
EnergyEfficientEthereum:
Ensures		VeriSol.SumMapping(balances) > 0
Ensures		_totalSupply == 1000000000000000000000000000
Ensures		decimals == 18
Ensures		VeriSol.SumMapping(balances) <= _totalSupply
Ensures		VeriSol.SumMapping(balances) > decimals
Ensures		_totalSupply > decimals
