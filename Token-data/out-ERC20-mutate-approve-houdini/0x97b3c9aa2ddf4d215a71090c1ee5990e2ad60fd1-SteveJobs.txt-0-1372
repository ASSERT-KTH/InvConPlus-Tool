Invariants with True value:21
Invariants with False value:1

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
approve(spender,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transferFrom(from,to,tokens): Requires msg.sender != address(0)
transferFrom(from,to,tokens): Requires VeriSol.Old(balances[from]) >= tokens
transferFrom(from,to,tokens): Requires tokens <= VeriSol.Old(allowed[from][msg.sender])
transferFrom(from,to,tokens): Requires VeriSol.Old(allowed[from][msg.sender]) != VeriSol.Old(balances[to])
transferFrom(from,to,tokens): Ensures VeriSol.Old(balances[from]) >= balances[from]
transferFrom(from,to,tokens): Ensures tokens <= balances[to]
transferFrom(from,to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transferFrom(from,to,tokens): Ensures VeriSol.Old(allowed[from][msg.sender]) >= allowed[from][msg.sender]
transferFrom(from,to,tokens): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.SumMapping(balances)
transferFrom(from,to,tokens): Ensures VeriSol.Old(balances[to]) <= balances[to]
transferFrom(from,to,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transferFrom(from,to,tokens): Ensures allowed[from][msg.sender] + tokens == VeriSol.Old(allowed[from][msg.sender])
SteveJobs: Ensures VeriSol.ContractInvariant(decimals == 18)
SteveJobs: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > 0)
SteveJobs: Ensures VeriSol.ContractInvariant(_totalSupply == 1000000000000000000000000)
SteveJobs: Ensures VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balances))
SteveJobs: Ensures VeriSol.ContractInvariant(decimals < _totalSupply)
SteveJobs: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) >= _totalSupply)

False Invariants:
approve(spender,tokens): Ensures tokens == allowed[msg.sender][spender]

 // ./gambit_out_approve/mutants/1372/verisol_test