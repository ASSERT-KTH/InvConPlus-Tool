Invariants with True value:18
Invariants with False value:0

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures allowed[msg.sender][spender] == tokens
approve(spender,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
approve(spender,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires tokens <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures VeriSol.Old(balances[to]) <= balances[to]
transfer(to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transfer(to,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transfer(to,tokens): Ensures balances[to] >= tokens
Blobfish: Ensures VeriSol.ContractInvariant(decimals == 0)
Blobfish: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 1000000000000)
Blobfish: Ensures VeriSol.ContractInvariant(_totalSupply == 1000000000000)
Blobfish: Ensures VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balances))
Blobfish: Ensures VeriSol.ContractInvariant(decimals < _totalSupply)
Blobfish: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == _totalSupply)

False Invariants:

 // ./gambit_out_approve/mutants/166/verisol_test