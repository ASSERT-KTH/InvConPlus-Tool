Invariants with True value:15
Invariants with False value:3

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
approve(spender,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
approve(spender,tokens): Ensures allowed[msg.sender][spender] == tokens
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires VeriSol.Old(balances[msg.sender]) >= tokens
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
transfer(to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transfer(to,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transfer(to,tokens): Ensures balances[to] >= tokens
transfer(to,tokens): Ensures balances[to] >= VeriSol.Old(balances[to])
DogeFather: Ensures VeriSol.ContractInvariant(decimals == 18)
DogeFather: Ensures VeriSol.ContractInvariant(_totalSupply == 100000000000000000000000000)
DogeFather: Ensures VeriSol.ContractInvariant(decimals < _totalSupply)

False Invariants:
DogeFather: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 100000000000000000000000000)
DogeFather: Ensures VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balances))
DogeFather: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == _totalSupply)

 // ./gambit_out_approve/mutants/1637/verisol_test