Invariants with True value:27
Invariants with False value:156

True Invariants:
transfer(_to,_value): VeriSol.Requires(msg.sender!=address(0))
transfer(_to,_value): VeriSol.Requires(decimals>0)
transfer(_to,_value): VeriSol.Requires(decimals==18)
transfer(_to,_value): VeriSol.Ensures(LockList[msg.sender]==false)
transfer(_to,_value): VeriSol.Ensures(LockList[_to]==false)
transfer(_to,_value): VeriSol.Ensures(decimals>0)
transfer(_to,_value): VeriSol.Ensures(decimals==18)
transfer(_to,_value): VeriSol.Ensures(_value <= balanceOf[_to])
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= balanceOf[_to])
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals)
transfer(_to,_value): VeriSol.Ensures(totalSupply == VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(totalSupply >= VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(totalSupply <= VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) == VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) == VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) >= VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) <= VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
Chellit: VeriSol.ContractInvariant(owner!=address(0))
Chellit: VeriSol.ContractInvariant(decimals>0)
Chellit: VeriSol.ContractInvariant(decimals==18)
Chellit: VeriSol.ContractInvariant(totalSupply == VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(totalSupply >= VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(totalSupply <= VeriSol.SumMapping(balanceOf))

False Invariants:
transfer(_to,_value): VeriSol.Requires(LockList[_to]==false)
transfer(_to,_value): VeriSol.Requires(LockList[msg.sender]==false)
transfer(_to,_value): VeriSol.Requires(VeriSol.SumMapping(balanceOf)>0)
transfer(_to,_value): VeriSol.Requires(VeriSol.SumMapping(balanceOf)==3000000000000000000000000000)
transfer(_to,_value): VeriSol.Requires(_to!=address(0))
transfer(_to,_value): VeriSol.Requires(totalSupply>0)
transfer(_to,_value): VeriSol.Requires(totalSupply==3000000000000000000000000000)
transfer(_to,_value): VeriSol.Requires(VeriSol.SumMapping(LockedTokens)==0)
transfer(_to,_value): VeriSol.Requires(_value != (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires(_value <= (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires(_value < (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires(_value != (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires(_value <= (totalSupply))
transfer(_to,_value): VeriSol.Requires(_value < (totalSupply))
transfer(_to,_value): VeriSol.Requires(_value != (totalSupply))
transfer(_to,_value): VeriSol.Requires(_value >= (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) != (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) <= (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) < (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) != (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) <= (totalSupply))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) < (totalSupply))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) != (totalSupply))
transfer(_to,_value): VeriSol.Requires((balanceOf[_to]) >= (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires(msg.sender != _to)
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) <= (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) < (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) != (VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) <= (totalSupply))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) < (totalSupply))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) != (totalSupply))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) >= (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) > (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) != (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balanceOf)) == (totalSupply))
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (totalSupply))
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balanceOf)) <= (totalSupply))
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balanceOf)) >= (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balanceOf)) > (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balanceOf)) != (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((totalSupply) >= (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((totalSupply) > (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Requires((totalSupply) != (VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(totalSupply>0)
transfer(_to,_value): VeriSol.Ensures(totalSupply==3000000000000000000000000000)
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to]>0)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens)==0)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balanceOf)>0)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balanceOf)==3000000000000000000000000000)
transfer(_to,_value): VeriSol.Ensures(_value <= totalSupply)
transfer(_to,_value): VeriSol.Ensures(_value < totalSupply)
transfer(_to,_value): VeriSol.Ensures(_value != totalSupply)
transfer(_to,_value): VeriSol.Ensures(_value != decimals)
transfer(_to,_value): VeriSol.Ensures(_value >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(_value <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(_value < VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(_value != VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= totalSupply)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < totalSupply)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != totalSupply)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) < VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(balanceOf[_to]) != VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupply)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupply)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupply)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= balanceOf[_to])
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < balanceOf[_to])
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != balanceOf[_to])
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) > VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(totalSupply >= balanceOf[_to])
transfer(_to,_value): VeriSol.Ensures(totalSupply == VeriSol.Old(VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Ensures(totalSupply <= VeriSol.Old(VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Ensures(totalSupply >= decimals)
transfer(_to,_value): VeriSol.Ensures(totalSupply > decimals)
transfer(_to,_value): VeriSol.Ensures(totalSupply != decimals)
transfer(_to,_value): VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(totalSupply > VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(totalSupply != VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(totalSupply >= VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(totalSupply > VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(totalSupply != VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(totalSupply == VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(totalSupply >= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(totalSupply <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] <= VeriSol.Old(VeriSol.SumMapping(balanceOf)))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] >= decimals)
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] > decimals)
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] != decimals)
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] > VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] != VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] <= VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] >= VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] > VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] != VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) > VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balanceOf)) != VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(decimals >= VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(decimals > VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(decimals != VeriSol.SumMapping(LockedTokens))
transfer(_to,_value): VeriSol.Ensures(decimals <= VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(decimals < VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(decimals != VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(decimals >= VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(decimals > VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(decimals != VeriSol.Old(VeriSol.SumMapping(LockedTokens)))
transfer(_to,_value): VeriSol.Ensures(decimals <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(decimals < VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(decimals != VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) <= VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) < VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) != VeriSol.Old(totalSupply))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) < VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(LockedTokens) != VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply) == VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply) >= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply) <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(LockedTokens)) <= VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(LockedTokens)) < VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(LockedTokens)) != VeriSol.SumMapping(balanceOf))
transfer(_to,_value): VeriSol.Ensures(balanceOf[_to] - VeriSol.Old(balanceOf[_to]) == _value)
Chellit: VeriSol.ContractInvariant(totalSupply>0)
Chellit: VeriSol.ContractInvariant(totalSupply==3000000000000000000000000000)
Chellit: VeriSol.ContractInvariant(VeriSol.SumMapping(LockedTokens)==0)
Chellit: VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf)>0)
Chellit: VeriSol.ContractInvariant(VeriSol.SumMapping(balanceOf)==3000000000000000000000000000)
Chellit: VeriSol.ContractInvariant(totalSupply >= decimals)
Chellit: VeriSol.ContractInvariant(totalSupply > decimals)
Chellit: VeriSol.ContractInvariant(totalSupply != decimals)
Chellit: VeriSol.ContractInvariant(totalSupply >= VeriSol.SumMapping(LockedTokens))
Chellit: VeriSol.ContractInvariant(totalSupply > VeriSol.SumMapping(LockedTokens))
Chellit: VeriSol.ContractInvariant(totalSupply != VeriSol.SumMapping(LockedTokens))
Chellit: VeriSol.ContractInvariant(decimals >= VeriSol.SumMapping(LockedTokens))
Chellit: VeriSol.ContractInvariant(decimals > VeriSol.SumMapping(LockedTokens))
Chellit: VeriSol.ContractInvariant(decimals != VeriSol.SumMapping(LockedTokens))
Chellit: VeriSol.ContractInvariant(decimals <= VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(decimals != VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(VeriSol.SumMapping(LockedTokens) <= VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(VeriSol.SumMapping(LockedTokens) < VeriSol.SumMapping(balanceOf))
Chellit: VeriSol.ContractInvariant(VeriSol.SumMapping(LockedTokens) != VeriSol.SumMapping(balanceOf))
