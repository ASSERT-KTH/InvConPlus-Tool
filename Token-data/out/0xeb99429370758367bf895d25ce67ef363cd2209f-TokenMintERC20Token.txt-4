Invariants with True value:12
Invariants with False value:80

True Invariants:
approve(spender,value): VeriSol.Requires(msg.sender!=address(0))
approve(spender,value): VeriSol.Ensures(_totalSupply == VeriSol.Old(_totalSupply))
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.Old(_totalSupply))
approve(spender,value): VeriSol.Ensures(_totalSupply <= VeriSol.Old(_totalSupply))
approve(spender,value): VeriSol.Ensures(value == _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(value >= _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(value <= _allowances[msg.sender][spender])
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals>0)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals==9)
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply == VeriSol.SumMapping(_balances))
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply >= VeriSol.SumMapping(_balances))
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply <= VeriSol.SumMapping(_balances))

False Invariants:
approve(spender,value): VeriSol.Requires(VeriSol.SumMapping(_balances)>0)
approve(spender,value): VeriSol.Requires(VeriSol.SumMapping(_balances)==777777777777777000000000)
approve(spender,value): VeriSol.Requires(value>0)
approve(spender,value): VeriSol.Requires(_allowances[msg.sender][spender]==0)
approve(spender,value): VeriSol.Requires(_totalSupply>0)
approve(spender,value): VeriSol.Requires(_totalSupply==777777777777777000000000)
approve(spender,value): VeriSol.Requires(spender!=address(0))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) <= value)
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) < value)
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) != value)
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) >= (_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) > (_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) != (_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) == (_totalSupply))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) >= (_totalSupply))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) <= (_totalSupply))
approve(spender,value): VeriSol.Requires(value >= (_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Requires(value > (_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Requires(value != (_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Requires(value >= (_totalSupply))
approve(spender,value): VeriSol.Requires(value > (_totalSupply))
approve(spender,value): VeriSol.Requires(value != (_totalSupply))
approve(spender,value): VeriSol.Requires((_allowances[msg.sender][spender]) <= (_totalSupply))
approve(spender,value): VeriSol.Requires((_allowances[msg.sender][spender]) < (_totalSupply))
approve(spender,value): VeriSol.Requires((_allowances[msg.sender][spender]) != (_totalSupply))
approve(spender,value): VeriSol.Requires(msg.sender != spender)
approve(spender,value): VeriSol.Ensures(_totalSupply>0)
approve(spender,value): VeriSol.Ensures(_totalSupply==777777777777777000000000)
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender]>0)
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances)>0)
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances)==777777777777777000000000)
approve(spender,value): VeriSol.Ensures(_totalSupply == VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(_totalSupply <= VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(_totalSupply <= value)
approve(spender,value): VeriSol.Ensures(_totalSupply < value)
approve(spender,value): VeriSol.Ensures(_totalSupply != value)
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.Old(_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Ensures(_totalSupply > VeriSol.Old(_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Ensures(_totalSupply != VeriSol.Old(_allowances[msg.sender][spender]))
approve(spender,value): VeriSol.Ensures(_totalSupply <= _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(_totalSupply < _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(_totalSupply != _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(_totalSupply == VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_totalSupply <= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(_balances)) <= _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(_balances)) < _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(_balances)) != _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(_balances)) == VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(_balances)) >= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(_balances)) <= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(value >= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(value > VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(value != VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) <= _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) < _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) != _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) <= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) < VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) != VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_totalSupply) <= _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_totalSupply) < _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_totalSupply) != _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_totalSupply) == VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_totalSupply) >= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_totalSupply) <= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] >= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] > VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] != VeriSol.SumMapping(_balances))
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply>0)
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply==777777777777777000000000)
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances)>0)
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances)==777777777777777000000000)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals <= _totalSupply)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals < _totalSupply)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals != _totalSupply)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals <= VeriSol.SumMapping(_balances))
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals < VeriSol.SumMapping(_balances))
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals != VeriSol.SumMapping(_balances))
