Invariants with True value:18
Invariants with False value:141

True Invariants:
transfer(recipient,amount): VeriSol.Requires(msg.sender!=address(0))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] >= VeriSol.Old(_balances[recipient]))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] >= amount)
transfer(recipient,amount): VeriSol.Ensures(_totalSupply == VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply <= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) == VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) >= VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) <= VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[msg.sender]) >= _balances[msg.sender])
approve(spender,value): VeriSol.Requires(msg.sender!=address(0))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] == value)
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] >= value)
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] <= value)
approve(spender,value): VeriSol.Ensures(_totalSupply == VeriSol.Old(_totalSupply))
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.Old(_totalSupply))
approve(spender,value): VeriSol.Ensures(_totalSupply <= VeriSol.Old(_totalSupply))
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances) <= _totalSupply)

False Invariants:
approve(spender,value): VeriSol.Requires(spender!=address(0))
approve(spender,value): VeriSol.Requires(VeriSol.SumMapping(_balances)>0)
approve(spender,value): VeriSol.Requires(_totalSupply>0)
approve(spender,value): VeriSol.Requires(_totalSupply==1000000000000000000000000000000000)
approve(spender,value): VeriSol.Requires((_allowances[msg.sender][spender]) != value)
approve(spender,value): VeriSol.Requires((_allowances[msg.sender][spender]) != (VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Requires((_allowances[msg.sender][spender]) != (_totalSupply))
approve(spender,value): VeriSol.Requires(msg.sender != spender)
approve(spender,value): VeriSol.Requires(value != (VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Requires(value != (_totalSupply))
approve(spender,value): VeriSol.Requires((VeriSol.SumMapping(_balances)) <= (_totalSupply))
approve(spender,value): VeriSol.Ensures(_totalSupply>0)
approve(spender,value): VeriSol.Ensures(_totalSupply==1000000000000000000000000000000000)
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances)>0)
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) != _allowances[msg.sender][spender])
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) != _totalSupply)
approve(spender,value): VeriSol.Ensures(VeriSol.Old(_allowances[msg.sender][spender]) != VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] != _totalSupply)
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] != VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] != VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(_allowances[msg.sender][spender] != VeriSol.Old(_totalSupply))
approve(spender,value): VeriSol.Ensures(value != _totalSupply)
approve(spender,value): VeriSol.Ensures(value != VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.SumMapping(_balances))
approve(spender,value): VeriSol.Ensures(_totalSupply >= VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances) == VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances) >= VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances) <= VeriSol.Old(VeriSol.SumMapping(_balances)))
approve(spender,value): VeriSol.Ensures(VeriSol.SumMapping(_balances) <= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Requires(recipient!=address(0))
transfer(recipient,amount): VeriSol.Requires(_balances[recipient]==0)
transfer(recipient,amount): VeriSol.Requires(_balances[msg.sender]>0)
transfer(recipient,amount): VeriSol.Requires(VeriSol.SumMapping(_balances)>0)
transfer(recipient,amount): VeriSol.Requires(VeriSol.SumMapping(_balances)==1000000000000000000000000000000000)
transfer(recipient,amount): VeriSol.Requires(_totalSupply>0)
transfer(recipient,amount): VeriSol.Requires(_totalSupply==1000000000000000000000000000000000)
transfer(recipient,amount): VeriSol.Requires(amount>0)
transfer(recipient,amount): VeriSol.Requires(msg.sender != recipient)
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) <= (_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) < (_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) != (_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) <= (VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) < (VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) != (VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) <= (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) < (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) != (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) <= amount)
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) < amount)
transfer(recipient,amount): VeriSol.Requires((_balances[recipient]) != amount)
transfer(recipient,amount): VeriSol.Requires((_balances[msg.sender]) <= (VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Requires((_balances[msg.sender]) <= (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((_balances[msg.sender]) >= amount)
transfer(recipient,amount): VeriSol.Requires((_balances[msg.sender]) > amount)
transfer(recipient,amount): VeriSol.Requires((_balances[msg.sender]) != amount)
transfer(recipient,amount): VeriSol.Requires((VeriSol.SumMapping(_balances)) == (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((VeriSol.SumMapping(_balances)) >= (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((VeriSol.SumMapping(_balances)) <= (_totalSupply))
transfer(recipient,amount): VeriSol.Requires((VeriSol.SumMapping(_balances)) >= amount)
transfer(recipient,amount): VeriSol.Requires((VeriSol.SumMapping(_balances)) > amount)
transfer(recipient,amount): VeriSol.Requires((VeriSol.SumMapping(_balances)) != amount)
transfer(recipient,amount): VeriSol.Requires((_totalSupply) >= amount)
transfer(recipient,amount): VeriSol.Requires((_totalSupply) > amount)
transfer(recipient,amount): VeriSol.Requires((_totalSupply) != amount)
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient]>0)
transfer(recipient,amount): VeriSol.Ensures(_totalSupply>0)
transfer(recipient,amount): VeriSol.Ensures(_totalSupply==1000000000000000000000000000000000)
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances)>0)
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances)==1000000000000000000000000000000000)
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender]>0)
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] <= _totalSupply)
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] < _totalSupply)
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] != _totalSupply)
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] > VeriSol.Old(_balances[recipient]))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] != VeriSol.Old(_balances[recipient]))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] <= VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] < VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] != VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] <= VeriSol.Old(_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] < VeriSol.Old(_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] != VeriSol.Old(_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] <= VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] < VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] != VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] <= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] < VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] != VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] == amount)
transfer(recipient,amount): VeriSol.Ensures(_balances[recipient] <= amount)
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= VeriSol.Old(_balances[recipient]))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply > VeriSol.Old(_balances[recipient]))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply != VeriSol.Old(_balances[recipient]))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply == VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply <= VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= VeriSol.Old(_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(_totalSupply > _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(_totalSupply != _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(_totalSupply == VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply <= VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_totalSupply >= amount)
transfer(recipient,amount): VeriSol.Ensures(_totalSupply > amount)
transfer(recipient,amount): VeriSol.Ensures(_totalSupply != amount)
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[recipient]) <= VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[recipient]) < VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[recipient]) != VeriSol.SumMapping(_balances))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[recipient]) <= _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[recipient]) < _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[recipient]) != _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) >= VeriSol.Old(_balances[msg.sender]))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) >= _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) > _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) != _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) == VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) >= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) <= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) >= amount)
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) > amount)
transfer(recipient,amount): VeriSol.Ensures(VeriSol.SumMapping(_balances) != amount)
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[msg.sender]) > _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(VeriSol.Old(_balances[msg.sender]) != _balances[msg.sender])
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender] <= VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender] < VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender] != VeriSol.Old(VeriSol.SumMapping(_balances)))
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender] <= VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender] < VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(_balances[msg.sender] != VeriSol.Old(_totalSupply))
transfer(recipient,amount): VeriSol.Ensures(amount + _balances[msg.sender] == VeriSol.Old(_balances[msg.sender]))
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances)>0)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals>0)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals==18)
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply>0)
TokenMintERC20Token: VeriSol.ContractInvariant(_totalSupply==1000000000000000000000000000000000)
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances) >= _decimals)
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances) > _decimals)
TokenMintERC20Token: VeriSol.ContractInvariant(VeriSol.SumMapping(_balances) != _decimals)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals <= _totalSupply)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals < _totalSupply)
TokenMintERC20Token: VeriSol.ContractInvariant(_decimals != _totalSupply)
