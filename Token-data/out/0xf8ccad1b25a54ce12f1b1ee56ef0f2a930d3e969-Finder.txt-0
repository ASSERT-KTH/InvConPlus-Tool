Invariants with True value:207
Invariants with False value:201

True Invariants:
transfer(_to,_value): VeriSol.Requires(initialSupply>0)
transfer(_to,_value): VeriSol.Requires(initialSupply==1000000000)
transfer(_to,_value): VeriSol.Requires(decimals==0)
transfer(_to,_value): VeriSol.Requires(msg.sender!=address(0))
transfer(_to,_value): VeriSol.Requires(owner!=address(0))
transfer(_to,_value): VeriSol.Requires((totalSupply_) <= (initialSupply))
transfer(_to,_value): VeriSol.Requires((totalSupply_) >= (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((totalSupply_) == (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((totalSupply_) >= (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((totalSupply_) <= (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((initialSupply) >= (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((initialSupply) > (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((initialSupply) != (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((initialSupply) >= (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) <= (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(initialSupply>0)
transfer(_to,_value): VeriSol.Ensures(initialSupply==1000000000)
transfer(_to,_value): VeriSol.Ensures(owner!=address(0))
transfer(_to,_value): VeriSol.Ensures(decimals==0)
transfer(_to,_value): VeriSol.Ensures(initialSupply >= VeriSol.Old(totalSupply_))
transfer(_to,_value): VeriSol.Ensures(initialSupply == VeriSol.Old(initialSupply))
transfer(_to,_value): VeriSol.Ensures(initialSupply >= VeriSol.Old(initialSupply))
transfer(_to,_value): VeriSol.Ensures(initialSupply <= VeriSol.Old(initialSupply))
transfer(_to,_value): VeriSol.Ensures(initialSupply >= VeriSol.Old(uint256(decimals)))
transfer(_to,_value): VeriSol.Ensures(initialSupply > VeriSol.Old(uint256(decimals)))
transfer(_to,_value): VeriSol.Ensures(initialSupply != VeriSol.Old(uint256(decimals)))
transfer(_to,_value): VeriSol.Ensures(initialSupply >= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(initialSupply >= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(initialSupply >= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(initialSupply >= decimals)
transfer(_to,_value): VeriSol.Ensures(initialSupply > decimals)
transfer(_to,_value): VeriSol.Ensures(initialSupply != decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(newOwner) == newOwner)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) >= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) >= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) >= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) > decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) != decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) >= decimals)
transfer(_to,_value): VeriSol.Ensures(owner == VeriSol.Old(owner))
transfer(_to,_value): VeriSol.Ensures(totalSupply_ == VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(totalSupply_ >= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(totalSupply_ <= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(totalSupply_ >= decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= decimals)
transfer(_to,_value): VeriSol.Ensures(decimals <= _value)
Lock(_holder): VeriSol.Requires(initialSupply>0)
Lock(_holder): VeriSol.Requires(initialSupply==1000000000)
Lock(_holder): VeriSol.Requires(decimals==0)
Lock(_holder): VeriSol.Requires(msg.sender!=address(0))
Lock(_holder): VeriSol.Requires(owner!=address(0))
Lock(_holder): VeriSol.Requires((totalSupply_) <= (initialSupply))
Lock(_holder): VeriSol.Requires((totalSupply_) >= (uint256(decimals)))
Lock(_holder): VeriSol.Requires((totalSupply_) == (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((totalSupply_) >= (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((totalSupply_) <= (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((initialSupply) >= (uint256(decimals)))
Lock(_holder): VeriSol.Requires((initialSupply) > (uint256(decimals)))
Lock(_holder): VeriSol.Requires((initialSupply) != (uint256(decimals)))
Lock(_holder): VeriSol.Requires((initialSupply) >= (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((uint256(decimals)) <= (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(initialSupply>0)
Lock(_holder): VeriSol.Ensures(initialSupply==1000000000)
Lock(_holder): VeriSol.Ensures(frozen[_holder]==true)
Lock(_holder): VeriSol.Ensures(owner!=address(0))
Lock(_holder): VeriSol.Ensures(decimals==0)
Lock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(totalSupply_))
Lock(_holder): VeriSol.Ensures(initialSupply == VeriSol.Old(initialSupply))
Lock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(initialSupply))
Lock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.Old(initialSupply))
Lock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(uint256(decimals)))
Lock(_holder): VeriSol.Ensures(initialSupply > VeriSol.Old(uint256(decimals)))
Lock(_holder): VeriSol.Ensures(initialSupply != VeriSol.Old(uint256(decimals)))
Lock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(initialSupply >= totalSupply_)
Lock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(initialSupply >= decimals)
Lock(_holder): VeriSol.Ensures(initialSupply > decimals)
Lock(_holder): VeriSol.Ensures(initialSupply != decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(newOwner) == newOwner)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) >= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) >= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) >= decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) > decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) != decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) >= decimals)
Lock(_holder): VeriSol.Ensures(owner == msg.sender)
Lock(_holder): VeriSol.Ensures(owner == VeriSol.Old(owner))
Lock(_holder): VeriSol.Ensures(totalSupply_ == VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(totalSupply_ >= VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(totalSupply_ <= VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(totalSupply_ >= decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= decimals)
UnLock(_holder): VeriSol.Requires(initialSupply>0)
UnLock(_holder): VeriSol.Requires(initialSupply==1000000000)
UnLock(_holder): VeriSol.Requires(decimals==0)
UnLock(_holder): VeriSol.Requires(msg.sender!=address(0))
UnLock(_holder): VeriSol.Requires(owner!=address(0))
UnLock(_holder): VeriSol.Requires((totalSupply_) <= (initialSupply))
UnLock(_holder): VeriSol.Requires((totalSupply_) >= (uint256(decimals)))
UnLock(_holder): VeriSol.Requires((totalSupply_) == (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((totalSupply_) >= (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((totalSupply_) <= (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((initialSupply) >= (uint256(decimals)))
UnLock(_holder): VeriSol.Requires((initialSupply) > (uint256(decimals)))
UnLock(_holder): VeriSol.Requires((initialSupply) != (uint256(decimals)))
UnLock(_holder): VeriSol.Requires((initialSupply) >= (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((uint256(decimals)) <= (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(initialSupply>0)
UnLock(_holder): VeriSol.Ensures(initialSupply==1000000000)
UnLock(_holder): VeriSol.Ensures(owner!=address(0))
UnLock(_holder): VeriSol.Ensures(decimals==0)
UnLock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(totalSupply_))
UnLock(_holder): VeriSol.Ensures(initialSupply == VeriSol.Old(initialSupply))
UnLock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(initialSupply))
UnLock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.Old(initialSupply))
UnLock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(uint256(decimals)))
UnLock(_holder): VeriSol.Ensures(initialSupply > VeriSol.Old(uint256(decimals)))
UnLock(_holder): VeriSol.Ensures(initialSupply != VeriSol.Old(uint256(decimals)))
UnLock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(initialSupply >= totalSupply_)
UnLock(_holder): VeriSol.Ensures(initialSupply >= VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(initialSupply >= decimals)
UnLock(_holder): VeriSol.Ensures(initialSupply > decimals)
UnLock(_holder): VeriSol.Ensures(initialSupply != decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) >= decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(newOwner) == newOwner)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) >= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) >= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) >= decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) > decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) != decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) >= decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) <= decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) >= decimals)
UnLock(_holder): VeriSol.Ensures(owner == msg.sender)
UnLock(_holder): VeriSol.Ensures(owner == VeriSol.Old(owner))
UnLock(_holder): VeriSol.Ensures(totalSupply_ == VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(totalSupply_ >= VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(totalSupply_ <= VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(totalSupply_ >= decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= decimals)
Finder: VeriSol.ContractInvariant(initialSupply>0)
Finder: VeriSol.ContractInvariant(initialSupply==1000000000)
Finder: VeriSol.ContractInvariant(owner!=address(0))
Finder: VeriSol.ContractInvariant(decimals==0)
Finder: VeriSol.ContractInvariant(initialSupply >= VeriSol.SumMapping(balances))
Finder: VeriSol.ContractInvariant(initialSupply >= totalSupply_)
Finder: VeriSol.ContractInvariant(initialSupply >= decimals)
Finder: VeriSol.ContractInvariant(initialSupply > decimals)
Finder: VeriSol.ContractInvariant(initialSupply != decimals)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == totalSupply_)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances) >= totalSupply_)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances) <= totalSupply_)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances) >= decimals)
Finder: VeriSol.ContractInvariant(totalSupply_ >= decimals)

False Invariants:
UnLock(_holder): VeriSol.Requires(totalSupply_>0)
UnLock(_holder): VeriSol.Requires(totalSupply_==1000000000)
UnLock(_holder): VeriSol.Requires(newOwner==address(0))
UnLock(_holder): VeriSol.Requires(_holder!=address(0))
UnLock(_holder): VeriSol.Requires(VeriSol.SumMapping(balances)>0)
UnLock(_holder): VeriSol.Requires(VeriSol.SumMapping(balances)==1000000000)
UnLock(_holder): VeriSol.Requires((totalSupply_) == (initialSupply))
UnLock(_holder): VeriSol.Requires((totalSupply_) >= (initialSupply))
UnLock(_holder): VeriSol.Requires((totalSupply_) > (uint256(decimals)))
UnLock(_holder): VeriSol.Requires((totalSupply_) != (uint256(decimals)))
UnLock(_holder): VeriSol.Requires((newOwner) != _holder)
UnLock(_holder): VeriSol.Requires((newOwner) != msg.sender)
UnLock(_holder): VeriSol.Requires((newOwner) != (owner))
UnLock(_holder): VeriSol.Requires((initialSupply) == (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((initialSupply) <= (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((uint256(decimals)) < (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires((uint256(decimals)) != (VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Requires(_holder != msg.sender)
UnLock(_holder): VeriSol.Requires(_holder != (owner))
UnLock(_holder): VeriSol.Requires(msg.sender == (owner))
UnLock(_holder): VeriSol.Ensures(newOwner==address(0))
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances)>0)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances)==1000000000)
UnLock(_holder): VeriSol.Ensures(totalSupply_>0)
UnLock(_holder): VeriSol.Ensures(totalSupply_==1000000000)
UnLock(_holder): VeriSol.Ensures(initialSupply == VeriSol.Old(totalSupply_))
UnLock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.Old(totalSupply_))
UnLock(_holder): VeriSol.Ensures(initialSupply == VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(initialSupply == totalSupply_)
UnLock(_holder): VeriSol.Ensures(initialSupply <= totalSupply_)
UnLock(_holder): VeriSol.Ensures(initialSupply == VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.Old(VeriSol.SumMapping(balances)))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) > decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) != decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(newOwner) != owner)
UnLock(_holder): VeriSol.Ensures(newOwner != _holder)
UnLock(_holder): VeriSol.Ensures(newOwner != owner)
UnLock(_holder): VeriSol.Ensures(newOwner != msg.sender)
UnLock(_holder): VeriSol.Ensures(newOwner != VeriSol.Old(owner))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) == VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) <= VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) == totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) <= totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != VeriSol.SumMapping(balances))
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupply_)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupply_)
UnLock(_holder): VeriSol.Ensures(_holder != owner)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) > decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) != decimals)
UnLock(_holder): VeriSol.Ensures(totalSupply_ > decimals)
UnLock(_holder): VeriSol.Ensures(totalSupply_ != decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) > decimals)
UnLock(_holder): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) != decimals)
transfer(_to,_value): VeriSol.Requires(totalSupply_>0)
transfer(_to,_value): VeriSol.Requires(totalSupply_==1000000000)
transfer(_to,_value): VeriSol.Requires(newOwner==address(0))
transfer(_to,_value): VeriSol.Requires(VeriSol.SumMapping(balances)>0)
transfer(_to,_value): VeriSol.Requires(VeriSol.SumMapping(balances)==1000000000)
transfer(_to,_value): VeriSol.Requires(_to!=address(0))
transfer(_to,_value): VeriSol.Requires(_value>0)
transfer(_to,_value): VeriSol.Requires((totalSupply_) == (initialSupply))
transfer(_to,_value): VeriSol.Requires((totalSupply_) >= (initialSupply))
transfer(_to,_value): VeriSol.Requires((totalSupply_) > (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((totalSupply_) != (uint256(decimals)))
transfer(_to,_value): VeriSol.Requires((totalSupply_) >= _value)
transfer(_to,_value): VeriSol.Requires((totalSupply_) > _value)
transfer(_to,_value): VeriSol.Requires((totalSupply_) != _value)
transfer(_to,_value): VeriSol.Requires((newOwner) != msg.sender)
transfer(_to,_value): VeriSol.Requires((newOwner) != (owner))
transfer(_to,_value): VeriSol.Requires((newOwner) != _to)
transfer(_to,_value): VeriSol.Requires((initialSupply) == (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((initialSupply) <= (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((initialSupply) >= _value)
transfer(_to,_value): VeriSol.Requires((initialSupply) > _value)
transfer(_to,_value): VeriSol.Requires((initialSupply) != _value)
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) < (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) != (VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) <= _value)
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) < _value)
transfer(_to,_value): VeriSol.Requires((uint256(decimals)) != _value)
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balances)) >= _value)
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balances)) > _value)
transfer(_to,_value): VeriSol.Requires((VeriSol.SumMapping(balances)) != _value)
transfer(_to,_value): VeriSol.Requires(msg.sender != _to)
transfer(_to,_value): VeriSol.Ensures(newOwner==address(0))
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances)>0)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances)==1000000000)
transfer(_to,_value): VeriSol.Ensures(totalSupply_>0)
transfer(_to,_value): VeriSol.Ensures(totalSupply_==1000000000)
transfer(_to,_value): VeriSol.Ensures(initialSupply == VeriSol.Old(totalSupply_))
transfer(_to,_value): VeriSol.Ensures(initialSupply <= VeriSol.Old(totalSupply_))
transfer(_to,_value): VeriSol.Ensures(initialSupply == VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(initialSupply <= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(initialSupply == totalSupply_)
transfer(_to,_value): VeriSol.Ensures(initialSupply <= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(initialSupply == VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(initialSupply <= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(_to,_value): VeriSol.Ensures(initialSupply >= _value)
transfer(_to,_value): VeriSol.Ensures(initialSupply > _value)
transfer(_to,_value): VeriSol.Ensures(initialSupply != _value)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) > decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(totalSupply_) != decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(newOwner) != owner)
transfer(_to,_value): VeriSol.Ensures(newOwner != owner)
transfer(_to,_value): VeriSol.Ensures(newOwner != msg.sender)
transfer(_to,_value): VeriSol.Ensures(newOwner != VeriSol.Old(owner))
transfer(_to,_value): VeriSol.Ensures(newOwner != _to)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) == VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) <= VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) == totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(initialSupply) <= totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != VeriSol.SumMapping(balances))
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupply_)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) > decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) != decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) >= _value)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) > _value)
transfer(_to,_value): VeriSol.Ensures(VeriSol.SumMapping(balances) != _value)
transfer(_to,_value): VeriSol.Ensures(totalSupply_ > decimals)
transfer(_to,_value): VeriSol.Ensures(totalSupply_ != decimals)
transfer(_to,_value): VeriSol.Ensures(totalSupply_ >= _value)
transfer(_to,_value): VeriSol.Ensures(totalSupply_ > _value)
transfer(_to,_value): VeriSol.Ensures(totalSupply_ != _value)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) > decimals)
transfer(_to,_value): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) != decimals)
transfer(_to,_value): VeriSol.Ensures(decimals < _value)
transfer(_to,_value): VeriSol.Ensures(decimals != _value)
Lock(_holder): VeriSol.Requires(frozen[_holder]==false)
Lock(_holder): VeriSol.Requires(totalSupply_>0)
Lock(_holder): VeriSol.Requires(totalSupply_==1000000000)
Lock(_holder): VeriSol.Requires(newOwner==address(0))
Lock(_holder): VeriSol.Requires(_holder!=address(0))
Lock(_holder): VeriSol.Requires(VeriSol.SumMapping(balances)>0)
Lock(_holder): VeriSol.Requires(VeriSol.SumMapping(balances)==1000000000)
Lock(_holder): VeriSol.Requires((totalSupply_) == (initialSupply))
Lock(_holder): VeriSol.Requires((totalSupply_) >= (initialSupply))
Lock(_holder): VeriSol.Requires((totalSupply_) > (uint256(decimals)))
Lock(_holder): VeriSol.Requires((totalSupply_) != (uint256(decimals)))
Lock(_holder): VeriSol.Requires((newOwner) != _holder)
Lock(_holder): VeriSol.Requires((newOwner) != msg.sender)
Lock(_holder): VeriSol.Requires((newOwner) != (owner))
Lock(_holder): VeriSol.Requires((initialSupply) == (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((initialSupply) <= (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((uint256(decimals)) < (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires((uint256(decimals)) != (VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Requires(_holder != msg.sender)
Lock(_holder): VeriSol.Requires(_holder != (owner))
Lock(_holder): VeriSol.Requires(msg.sender == (owner))
Lock(_holder): VeriSol.Ensures(newOwner==address(0))
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances)>0)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances)==1000000000)
Lock(_holder): VeriSol.Ensures(totalSupply_>0)
Lock(_holder): VeriSol.Ensures(totalSupply_==1000000000)
Lock(_holder): VeriSol.Ensures(initialSupply == VeriSol.Old(totalSupply_))
Lock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.Old(totalSupply_))
Lock(_holder): VeriSol.Ensures(initialSupply == VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(initialSupply == totalSupply_)
Lock(_holder): VeriSol.Ensures(initialSupply <= totalSupply_)
Lock(_holder): VeriSol.Ensures(initialSupply == VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(initialSupply <= VeriSol.Old(VeriSol.SumMapping(balances)))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) > decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(totalSupply_) != decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(newOwner) != owner)
Lock(_holder): VeriSol.Ensures(newOwner != _holder)
Lock(_holder): VeriSol.Ensures(newOwner != owner)
Lock(_holder): VeriSol.Ensures(newOwner != msg.sender)
Lock(_holder): VeriSol.Ensures(newOwner != VeriSol.Old(owner))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) == VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) <= VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) == totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(initialSupply) <= totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != VeriSol.SumMapping(balances))
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) < totalSupply_)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(uint256(decimals)) != totalSupply_)
Lock(_holder): VeriSol.Ensures(_holder != owner)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) > decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.SumMapping(balances) != decimals)
Lock(_holder): VeriSol.Ensures(totalSupply_ > decimals)
Lock(_holder): VeriSol.Ensures(totalSupply_ != decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) > decimals)
Lock(_holder): VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) != decimals)
Finder: VeriSol.ContractInvariant(newOwner==address(0))
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances)>0)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances)==1000000000)
Finder: VeriSol.ContractInvariant(totalSupply_>0)
Finder: VeriSol.ContractInvariant(totalSupply_==1000000000)
Finder: VeriSol.ContractInvariant(initialSupply == VeriSol.SumMapping(balances))
Finder: VeriSol.ContractInvariant(initialSupply <= VeriSol.SumMapping(balances))
Finder: VeriSol.ContractInvariant(initialSupply == totalSupply_)
Finder: VeriSol.ContractInvariant(initialSupply <= totalSupply_)
Finder: VeriSol.ContractInvariant(newOwner != owner)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > decimals)
Finder: VeriSol.ContractInvariant(VeriSol.SumMapping(balances) != decimals)
Finder: VeriSol.ContractInvariant(totalSupply_ > decimals)
Finder: VeriSol.ContractInvariant(totalSupply_ != decimals)
