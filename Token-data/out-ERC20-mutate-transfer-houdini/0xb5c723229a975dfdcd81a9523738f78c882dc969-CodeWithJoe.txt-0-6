Invariants with True value:14
Invariants with False value:0

True Invariants:
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires VeriSol.Old(balances[msg.sender]) >= tokens
transfer(to,tokens): Ensures VeriSol.Old(balances[msg.sender]) >= balances[msg.sender]
transfer(to,tokens): Ensures balances[to] >= tokens
transfer(to,tokens): Ensures balances[to] >= VeriSol.Old(balances[to])
transfer(to,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transfer(to,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
transfer(to,tokens): Ensures VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances))
CodeWithJoe: Ensures VeriSol.ContractInvariant(_totalSupply == 3000000000000000000000000000)
CodeWithJoe: Ensures VeriSol.ContractInvariant(decimals == 18)
CodeWithJoe: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > 0)
CodeWithJoe: Ensures VeriSol.ContractInvariant(_totalSupply > decimals)
CodeWithJoe: Ensures VeriSol.ContractInvariant(_totalSupply >= VeriSol.SumMapping(balances))
CodeWithJoe: Ensures VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balances))

False Invariants:

 // ./gambit_out_transfer/mutants/6/verisol_test