Invariants with True value:12
Invariants with False value:6

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
approve(spender,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
approve(spender,tokens): Ensures tokens == allowed[msg.sender][spender]
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires tokens <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
transfer(to,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
ArtDeco: Ensures VeriSol.ContractInvariant(decimals == 9)
ArtDeco: Ensures VeriSol.ContractInvariant(_totalSupply == 100000000000000000000000000)
ArtDeco: Ensures VeriSol.ContractInvariant(decimals < _totalSupply)

False Invariants:
transfer(to,tokens): Ensures tokens <= balances[to]
transfer(to,tokens): Ensures VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures balances[to] >= VeriSol.Old(balances[to])
ArtDeco: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 100000000000000000000000000)
ArtDeco: Ensures VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balances))
ArtDeco: Ensures VeriSol.ContractInvariant(_totalSupply == VeriSol.SumMapping(balances))

 // ./gambit_out_transfer/mutants/443/verisol_test