Invariants with True value:18
Invariants with False value:0

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures allowed[msg.sender][spender] == tokens
approve(spender,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
approve(spender,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires VeriSol.Old(balances[msg.sender]) >= tokens
transfer(to,tokens): Ensures VeriSol.Old(balances[to]) <= balances[to]
transfer(to,tokens): Ensures VeriSol.Old(balances[msg.sender]) >= balances[msg.sender]
transfer(to,tokens): Ensures VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
transfer(to,tokens): Ensures tokens <= balances[to]
transfer(to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
Summit: Ensures VeriSol.ContractInvariant(decimals == 18)
Summit: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 10000000000000000000000000000000)
Summit: Ensures VeriSol.ContractInvariant(_totalSupply == 10000000000000000000000000000000)
Summit: Ensures VeriSol.ContractInvariant(decimals < VeriSol.SumMapping(balances))
Summit: Ensures VeriSol.ContractInvariant(decimals < _totalSupply)
Summit: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == _totalSupply)

False Invariants:

 // ./gambit_out_transfer/mutants/129/verisol_test