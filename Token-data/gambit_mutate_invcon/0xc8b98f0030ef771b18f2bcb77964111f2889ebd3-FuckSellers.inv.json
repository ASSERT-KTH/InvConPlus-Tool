[
    {
        "func": "approve(spender,value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(LastBuyer) != address(0))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) == 0)",
            "VeriSol.Requires(VeriSol.Old(_ownershipLocked) == 0)",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(VeriSol.Old(Fee) > 0)",
            "VeriSol.Requires(value > 0)",
            "VeriSol.Requires(spender != address(0))",
            "VeriSol.Requires(VeriSol.Old(_owner) != address(0))",
            "VeriSol.Requires(VeriSol.Old(initializing) == false)",
            "VeriSol.Requires(VeriSol.Old(uint256(_decimals)) == 9)",
            "VeriSol.Requires(VeriSol.Old(initialized) == true)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(_updatedBalance)) == 1000000000000)",
            "VeriSol.Requires(VeriSol.Old(NextVault) != address(0))",
            "VeriSol.Requires(VeriSol.Old(MaxFee) == 20000)",
            "VeriSol.Requires(VeriSol.Old(_totalSupply) == 1000000000000)",
            "VeriSol.Requires(VeriSol.Old(LastBuyer) != spender)",
            "VeriSol.Requires(VeriSol.Old(LastBuyer) != VeriSol.Old(NextVault))",
            "VeriSol.Requires(VeriSol.Old(LastBuyer) != VeriSol.Old(Uniswap))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) <= VeriSol.Old(FuckValue))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) == VeriSol.Old(_ownershipLocked))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) <= VeriSol.Old(Nextbal))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) < VeriSol.Old(Fee))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) < value)",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) <= VeriSol.Old(SqueezeOn))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) != VeriSol.Old(uint256(_decimals)))",
            "VeriSol.Requires(VeriSol.Old(_allowance[msg.sender][spender]) <= VeriSol.Old(VeriSol.SumMapping(_updatedBalance)))"
        ],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]