[
    {
        "func": "approve(spender,amount)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(msg.sender != address(0))"
        ],
        "postconditions": [
            "VeriSol.Ensures(VeriSol.Old(oneHundredPercent) == oneHundredPercent)",
            "VeriSol.Ensures(_totalSupply == VeriSol.Old(_totalSupply))",
            "VeriSol.Ensures(allowed[msg.sender][spender] == amount)",
            "VeriSol.Ensures(VeriSol.Old(uint256(decimals)) == decimals)",
            "VeriSol.Ensures(!(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( allowed[msg.sender][spender] >= VeriSol.Old(allowed[msg.sender][spender])))",
            "VeriSol.Ensures(!(amount == VeriSol.Old(allowed[msg.sender][spender]) ) || ( allowed[msg.sender][spender] == VeriSol.Old(allowed[msg.sender][spender])))",
            "VeriSol.Ensures(!(amount > VeriSol.Old(allowed[msg.sender][spender]) ) || ( allowed[msg.sender][spender] > 0))",
            "VeriSol.Ensures(!(amount >= VeriSol.Old(allowed[msg.sender][spender]) && amount != VeriSol.Old(allowed[msg.sender][spender]) ) || ( allowed[msg.sender][spender] > 0))",
            "VeriSol.Ensures(!(amount >= VeriSol.Old(allowed[msg.sender][spender]) && amount != VeriSol.Old(allowed[msg.sender][spender]) ) || ( allowed[msg.sender][spender] > VeriSol.Old(allowed[msg.sender][spender])))",
            "VeriSol.Ensures(!(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( allowed[msg.sender][spender] > 0 || allowed[msg.sender][spender] == VeriSol.Old(allowed[msg.sender][spender])))",
            "VeriSol.Ensures(!(amount >= VeriSol.Old(allowed[msg.sender][spender]) ) || ( allowed[msg.sender][spender] > 0 || allowed[msg.sender][spender] == VeriSol.Old(allowed[msg.sender][spender])))"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [
            "VeriSol.Ensures(decimals == 18)",
            "VeriSol.Ensures(oneHundredPercent == 100)",
            "VeriSol.Ensures(decimals < oneHundredPercent)",
            "VeriSol.Ensures(_totalSupply == VeriSol.SumMapping(balances))"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]