Invariants with True value:9
Invariants with False value:4

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
approve(spender,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
approve(spender,tokens): Ensures tokens == allowed[msg.sender][spender]
approve(spender,tokens): Ensures !(tokens == VeriSol.Old(allowed[msg.sender][spender]) ) || ( VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender])
approve(spender,tokens): Ensures !(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender])
approve(spender,tokens): Ensures !(tokens >= VeriSol.Old(allowed[msg.sender][spender]) && tokens != VeriSol.Old(allowed[msg.sender][spender]) ) || ( VeriSol.Old(allowed[msg.sender][spender]) < allowed[msg.sender][spender])
KUNGFUPANDA: Ensures VeriSol.ContractInvariant(decimals == 18)
KUNGFUPANDA: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == _totalSupply)

False Invariants:
KUNGFUPANDA: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 1000000000000000000000000000000)
KUNGFUPANDA: Ensures VeriSol.ContractInvariant(_totalSupply == 1000000000000000000000000000000)
KUNGFUPANDA: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > decimals)
KUNGFUPANDA: Ensures VeriSol.ContractInvariant(_totalSupply > decimals)

 // ./gambit_out_approve/mutants/118/verisol_test