Invariants with True value:38
Invariants with False value:1

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
approve(spender,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
approve(spender,tokens): Ensures tokens == allowed[msg.sender][spender]
approve(spender,tokens): Ensures !(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender])
approve(spender,tokens): Ensures !(VeriSol.Old(allowed[msg.sender][spender]) == tokens ) || ( VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender])
approve(spender,tokens): Ensures !(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( VeriSol.Old(allowed[msg.sender][spender]) != allowed[msg.sender][spender] || allowed[msg.sender][spender] != 115792089237316195423570985008687907853269984665640564039457584007913129639935)
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires tokens <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
transfer(to,tokens): Ensures VeriSol.Old(balances[to]) <= balances[to]
transfer(to,tokens): Ensures decimals == VeriSol.Old(uint256(decimals))
transfer(to,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
transfer(to,tokens): Ensures tokens <= balances[to]
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) ) || ( VeriSol.Old(balances[to]) == VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) == tokens ) || ( tokens == VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) > tokens ) || ( VeriSol.SumMapping(balances) > 0)
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) ) || ( VeriSol.Old(VeriSol.SumMapping(balances)) >= balances[msg.sender])
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) ) || ( balances[msg.sender] <= VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) >= VeriSol.Old(balances[msg.sender]) ) || ( VeriSol.SumMapping(balances) >= VeriSol.Old(balances[msg.sender]))
transfer(to,tokens): Ensures !(VeriSol.Old(balances[to]) != tokens ) || ( balances[to] > 0)
transfer(to,tokens): Ensures !(VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) ) || ( balances[to] - tokens == VeriSol.Old(balances[to]))
transfer(to,tokens): Ensures !(VeriSol.Old(balances[to]) != VeriSol.Old(balances[msg.sender]) ) || ( VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens)
transfer(to,tokens): Ensures !(msg.sender != to ) || ( balances[to] - tokens == VeriSol.Old(balances[to]))
transfer(to,tokens): Ensures !(msg.sender != to ) || ( VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens)
transfer(to,tokens): Ensures !(to == address(0) ) || ( balances[to] - tokens == VeriSol.Old(balances[to]))
transfer(to,tokens): Ensures !(msg.sender == to ) || ( VeriSol.Old(balances[to]) == balances[msg.sender])
transfer(to,tokens): Ensures !(msg.sender == to ) || ( VeriSol.Old(balances[to]) == balances[to])
transfer(to,tokens): Ensures !(msg.sender == to ) || ( balances[msg.sender] == balances[to])
transfer(to,tokens): Ensures !(msg.sender == to ) || ( balances[msg.sender] == VeriSol.Old(balances[msg.sender]))
transfer(to,tokens): Ensures !(msg.sender == to ) || ( balances[to] == VeriSol.Old(balances[msg.sender]))
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) >= tokens && VeriSol.Old(balances[to]) == tokens ) || ( VeriSol.Old(balances[to]) <= VeriSol.SumMapping(balances))
CodeWithJoe: Ensures VeriSol.ContractInvariant(_totalSupply == 1000000000000000000000000000000000)
CodeWithJoe: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > 0)
CodeWithJoe: Ensures VeriSol.ContractInvariant(_totalSupply >= VeriSol.SumMapping(balances))
CodeWithJoe: Ensures VeriSol.ContractInvariant(_totalSupply > decimals)
CodeWithJoe: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > decimals)

False Invariants:
CodeWithJoe: Ensures VeriSol.ContractInvariant(decimals == 18)

 // ./gambit_out_approve/mutants/940/verisol_test