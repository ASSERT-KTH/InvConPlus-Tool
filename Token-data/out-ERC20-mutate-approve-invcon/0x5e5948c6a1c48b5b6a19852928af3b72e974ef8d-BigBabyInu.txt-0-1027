Invariants with True value:26
Invariants with False value:3

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures allowed[msg.sender][spender] == tokens
approve(spender,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
approve(spender,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires tokens <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures tokens <= balances[to]
transfer(to,tokens): Ensures VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transfer(to,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
transfer(to,tokens): Ensures VeriSol.Old(balances[to]) <= balances[to]
transferFrom(from,to,tokens): Requires msg.sender != address(0)
transferFrom(from,to,tokens): Requires tokens <= VeriSol.Old(balances[from])
transferFrom(from,to,tokens): Requires tokens <= VeriSol.Old(allowed[from][msg.sender])
transferFrom(from,to,tokens): Requires VeriSol.Old(balances[to]) != VeriSol.Old(allowed[from][msg.sender])
transferFrom(from,to,tokens): Ensures tokens <= balances[to]
transferFrom(from,to,tokens): Ensures VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances))
transferFrom(from,to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transferFrom(from,to,tokens): Ensures balances[from] <= VeriSol.Old(balances[from])
transferFrom(from,to,tokens): Ensures allowed[from][msg.sender] <= VeriSol.Old(allowed[from][msg.sender])
transferFrom(from,to,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
transferFrom(from,to,tokens): Ensures VeriSol.Old(balances[to]) <= balances[to]
BigBabyInu: Ensures VeriSol.ContractInvariant(decimals == 9)
BigBabyInu: Ensures VeriSol.ContractInvariant(_totalSupply == 100000000000000000000)
BigBabyInu: Ensures VeriSol.ContractInvariant(decimals < _totalSupply)

False Invariants:
BigBabyInu: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 100000000000000000000)
BigBabyInu: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > decimals)
BigBabyInu: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == _totalSupply)

 // ./gambit_out_approve/mutants/1027/verisol_test