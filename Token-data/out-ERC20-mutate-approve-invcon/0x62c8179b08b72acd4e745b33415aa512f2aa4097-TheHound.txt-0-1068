Invariants with True value:40
Invariants with False value:1

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
approve(spender,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
approve(spender,tokens): Ensures !(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( VeriSol.Old(allowed[msg.sender][spender]) <= allowed[msg.sender][spender])
approve(spender,tokens): Ensures !(tokens == VeriSol.Old(allowed[msg.sender][spender]) ) || ( VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender])
approve(spender,tokens): Ensures !(VeriSol.Old(allowed[msg.sender][spender]) == 0 ) || ( allowed[msg.sender][spender] > 0 || VeriSol.Old(allowed[msg.sender][spender]) == allowed[msg.sender][spender])
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires tokens <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
transfer(to,tokens): Ensures _totalSupply == VeriSol.Old(_totalSupply)
transfer(to,tokens): Ensures balances[to] >= tokens
transfer(to,tokens): Ensures balances[to] >= VeriSol.Old(balances[to])
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
transfer(to,tokens): Ensures !(tokens > 0 ) || ( balances[to] > 0)
transfer(to,tokens): Ensures !(tokens != VeriSol.Old(balances[msg.sender]) ) || ( balances[msg.sender] > 0)
transfer(to,tokens): Ensures !(tokens == VeriSol.Old(VeriSol.SumMapping(balances)) ) || ( tokens == VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(tokens < VeriSol.Old(VeriSol.SumMapping(balances)) ) || ( VeriSol.SumMapping(balances) > 0)
transfer(to,tokens): Ensures !(to != msg.sender ) || ( VeriSol.Old(balances[to]) + tokens == balances[to])
transfer(to,tokens): Ensures !(to != msg.sender ) || ( VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens)
transfer(to,tokens): Ensures !(VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(VeriSol.SumMapping(balances)) ) || ( balances[msg.sender] <= VeriSol.Old(VeriSol.SumMapping(balances)))
transfer(to,tokens): Ensures !(VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(VeriSol.SumMapping(balances)) ) || ( balances[msg.sender] <= VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(VeriSol.Old(balances[msg.sender]) <= VeriSol.Old(VeriSol.SumMapping(balances)) ) || ( VeriSol.Old(balances[msg.sender]) <= VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[to]) ) || ( VeriSol.Old(balances[to]) + tokens == balances[to])
transfer(to,tokens): Ensures !(VeriSol.Old(balances[msg.sender]) != VeriSol.Old(balances[to]) ) || ( VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens)
transfer(to,tokens): Ensures !(VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.Old(balances[to]) ) || ( VeriSol.Old(balances[to]) == VeriSol.SumMapping(balances))
transfer(to,tokens): Ensures !(to == msg.sender ) || ( balances[to] <= balances[msg.sender])
transfer(to,tokens): Ensures !(to == msg.sender ) || ( balances[to] == VeriSol.Old(balances[msg.sender]))
transfer(to,tokens): Ensures !(to == msg.sender ) || ( tokens <= balances[msg.sender])
transfer(to,tokens): Ensures !(to == msg.sender ) || ( balances[msg.sender] == VeriSol.Old(balances[to]))
transfer(to,tokens): Ensures !(to == msg.sender ) || ( balances[to] == VeriSol.Old(balances[to]))
transfer(to,tokens): Ensures !(to == msg.sender ) || ( balances[msg.sender] == VeriSol.Old(balances[msg.sender]))
transfer(to,tokens): Ensures !(tokens < VeriSol.Old(balances[msg.sender]) && tokens >= VeriSol.Old(balances[to]) ) || ( VeriSol.Old(balances[to]) + tokens == balances[to])
transfer(to,tokens): Ensures !(tokens < VeriSol.Old(balances[msg.sender]) && tokens >= VeriSol.Old(balances[to]) ) || ( VeriSol.Old(balances[msg.sender]) - balances[msg.sender] == tokens)
TheHound: Ensures VeriSol.ContractInvariant(_totalSupply == 1000000000000000000000000000000000)
TheHound: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 1000000000000000000000000000000000)
TheHound: Ensures VeriSol.ContractInvariant(decimals == 18)
TheHound: Ensures VeriSol.ContractInvariant(_totalSupply == VeriSol.SumMapping(balances))
TheHound: Ensures VeriSol.ContractInvariant(_totalSupply > decimals)
TheHound: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > decimals)

False Invariants:
approve(spender,tokens): Ensures tokens == allowed[msg.sender][spender]

 // ./gambit_out_approve/mutants/1068/verisol_test