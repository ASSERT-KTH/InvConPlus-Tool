Invariants with True value:10
Invariants with False value:0

True Invariants:
approve(spender,value): Requires spender != address(0)
approve(spender,value): Requires msg.sender != address(0)
approve(spender,value): Ensures _totalSupply == VeriSol.Old(_totalSupply)
approve(spender,value): Ensures value == _allowances[msg.sender][spender]
approve(spender,value): Ensures !(VeriSol.Old(_allowances[msg.sender][spender]) == 0 ) || ( _allowances[msg.sender][spender] >= VeriSol.Old(_allowances[msg.sender][spender]))
approve(spender,value): Ensures !(value == VeriSol.Old(_allowances[msg.sender][spender]) ) || ( _allowances[msg.sender][spender] == VeriSol.Old(_allowances[msg.sender][spender]))
approve(spender,value): Ensures !(value >= VeriSol.Old(_allowances[msg.sender][spender]) && value != VeriSol.Old(_allowances[msg.sender][spender]) ) || ( _allowances[msg.sender][spender] > VeriSol.Old(_allowances[msg.sender][spender]))
approve(spender,value): Ensures !(value > VeriSol.Old(_allowances[msg.sender][spender]) && VeriSol.Old(_allowances[msg.sender][spender]) == 0 ) || ( _allowances[msg.sender][spender] > 0)
approve(spender,value): Ensures !(value != VeriSol.Old(_allowances[msg.sender][spender]) && VeriSol.Old(_allowances[msg.sender][spender]) == 0 ) || ( _allowances[msg.sender][spender] > VeriSol.Old(_allowances[msg.sender][spender]))
TokenMintERC20Token: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(_balances) <= _totalSupply)

False Invariants:

 // ./gambit_out_transferFrom/mutants/134/verisol_test