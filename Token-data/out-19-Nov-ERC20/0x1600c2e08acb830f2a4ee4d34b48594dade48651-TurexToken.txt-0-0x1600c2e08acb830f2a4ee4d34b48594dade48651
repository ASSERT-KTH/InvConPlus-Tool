Invariants with True value:26
Invariants with False value:64

True Invariants:
unfreeze(): Requires VeriSol.Old(unfrozen) == false
unfreeze(): Requires VeriSol.Old(owner) != address(0)
unfreeze(): Requires msg.sender != address(0)
unfreeze(): Requires VeriSol.Old(owner) == msg.sender
unfreeze(): Ensures unfrozen == true
unfreeze(): Ensures owner != address(0)
unfreeze(): Ensures VeriSol.Old(totalSupply_) == totalSupply_
unfreeze(): Ensures VeriSol.Old(totalSupply_) >= totalSupply_
unfreeze(): Ensures VeriSol.Old(totalSupply_) <= totalSupply_
unfreeze(): Ensures VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
unfreeze(): Ensures VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances))
unfreeze(): Ensures VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances))
unfreeze(): Ensures VeriSol.Old(owner) == owner
unfreeze(): Ensures owner == msg.sender
transfer(_to,_value): Requires _to != address(0)
transfer(_to,_value): Requires msg.sender != address(0)
transfer(_to,_value): Ensures VeriSol.Old(totalSupply_) == totalSupply_
transfer(_to,_value): Ensures VeriSol.Old(totalSupply_) >= totalSupply_
transfer(_to,_value): Ensures VeriSol.Old(totalSupply_) <= totalSupply_
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances))
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances))
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances))
transfer(_to,_value): Ensures VeriSol.Old(owner) == owner
TurexToken: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == totalSupply_)
TurexToken: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) >= totalSupply_)
TurexToken: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) <= totalSupply_)

False Invariants:
unfreeze(): Requires VeriSol.Old(totalSupply_) > 0
unfreeze(): Requires VeriSol.Old(totalSupply_) == 5000000000000000000000000
unfreeze(): Requires VeriSol.Old(VeriSol.SumMapping(balances)) > 0
unfreeze(): Requires VeriSol.Old(VeriSol.SumMapping(balances)) == 5000000000000000000000000
unfreeze(): Requires VeriSol.Old(totalSupply_) == VeriSol.Old(VeriSol.SumMapping(balances))
unfreeze(): Requires VeriSol.Old(totalSupply_) >= VeriSol.Old(VeriSol.SumMapping(balances))
unfreeze(): Requires VeriSol.Old(totalSupply_) <= VeriSol.Old(VeriSol.SumMapping(balances))
unfreeze(): Ensures VeriSol.SumMapping(balances) > 0
unfreeze(): Ensures VeriSol.SumMapping(balances) == 5000000000000000000000000
unfreeze(): Ensures totalSupply_ > 0
unfreeze(): Ensures totalSupply_ == 5000000000000000000000000
unfreeze(): Ensures VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances)
unfreeze(): Ensures VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances)
unfreeze(): Ensures VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances)
unfreeze(): Ensures VeriSol.SumMapping(balances) == totalSupply_
unfreeze(): Ensures VeriSol.SumMapping(balances) >= totalSupply_
unfreeze(): Ensures VeriSol.SumMapping(balances) <= totalSupply_
unfreeze(): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) == totalSupply_
unfreeze(): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) >= totalSupply_
unfreeze(): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) <= totalSupply_
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) > 0
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) == 5000000000000000000000000
transfer(_to,_value): Requires VeriSol.Old(unfrozen) == true
transfer(_to,_value): Requires VeriSol.Old(owner) != address(0)
transfer(_to,_value): Requires VeriSol.Old(VeriSol.SumMapping(balances)) > 0
transfer(_to,_value): Requires VeriSol.Old(VeriSol.SumMapping(balances)) == 5000000000000000000000000
transfer(_to,_value): Requires _value > 0
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) == VeriSol.Old(VeriSol.SumMapping(balances))
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) >= VeriSol.Old(VeriSol.SumMapping(balances))
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) <= VeriSol.Old(VeriSol.SumMapping(balances))
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) >= _value
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) > _value
transfer(_to,_value): Requires VeriSol.Old(totalSupply_) != _value
transfer(_to,_value): Requires VeriSol.Old(VeriSol.SumMapping(balances)) >= _value
transfer(_to,_value): Requires VeriSol.Old(VeriSol.SumMapping(balances)) > _value
transfer(_to,_value): Requires VeriSol.Old(VeriSol.SumMapping(balances)) != _value
transfer(_to,_value): Requires _to != msg.sender
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) > 0
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) == 5000000000000000000000000
transfer(_to,_value): Ensures unfrozen == true
transfer(_to,_value): Ensures owner != address(0)
transfer(_to,_value): Ensures totalSupply_ > 0
transfer(_to,_value): Ensures totalSupply_ == 5000000000000000000000000
transfer(_to,_value): Ensures VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances)
transfer(_to,_value): Ensures VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances)
transfer(_to,_value): Ensures VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances)
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) >= _value
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) > _value
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) != _value
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) == totalSupply_
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) >= totalSupply_
transfer(_to,_value): Ensures VeriSol.SumMapping(balances) <= totalSupply_
transfer(_to,_value): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) == totalSupply_
transfer(_to,_value): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) >= totalSupply_
transfer(_to,_value): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) <= totalSupply_
transfer(_to,_value): Ensures _value <= totalSupply_
transfer(_to,_value): Ensures _value < totalSupply_
transfer(_to,_value): Ensures _value != totalSupply_
TurexToken: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > 0)
TurexToken: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 5000000000000000000000000)
TurexToken: Ensures VeriSol.ContractInvariant(unfrozen == true)
TurexToken: Ensures VeriSol.ContractInvariant(owner != address(0))
TurexToken: Ensures VeriSol.ContractInvariant(totalSupply_ > 0)
TurexToken: Ensures VeriSol.ContractInvariant(totalSupply_ == 5000000000000000000000000)
