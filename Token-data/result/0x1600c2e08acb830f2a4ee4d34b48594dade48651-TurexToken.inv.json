[
    {
        "func": "approve(_spender,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "approve(_spender,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(_from,_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferFrom(_from,_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burn(_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "disableTransfer(_for)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "disableTransfer(_for)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseApproval(_spender,_subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "decreaseApproval(_spender,_subtractedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "unfreeze()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > 0)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == 5000000000000000000000000)",
            "VeriSol.Requires(VeriSol.Old(unfrozen) == false)",
            "VeriSol.Requires(VeriSol.Old(owner) != address(0))",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > 0)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) == 5000000000000000000000000)",
            "VeriSol.Requires(msg.value == 0)",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= msg.value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > msg.value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) != msg.value)",
            "VeriSol.Requires(VeriSol.Old(owner) == msg.sender)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) >= msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) != msg.value)"
        ],
        "postconditions": [
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > 0)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == 5000000000000000000000000)",
            "VeriSol.Ensures(unfrozen == true)",
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(totalSupply_ > 0)",
            "VeriSol.Ensures(totalSupply_ == 5000000000000000000000000)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) != msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(owner) == owner)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) <= totalSupply_)",
            "VeriSol.Ensures(owner == msg.sender)",
            "VeriSol.Ensures(msg.value <= totalSupply_)",
            "VeriSol.Ensures(msg.value < totalSupply_)",
            "VeriSol.Ensures(msg.value != totalSupply_)"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "unfreeze()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "renounceOwnership()",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burnFrom(_from,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "burnFrom(_from,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > 0)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == 5000000000000000000000000)",
            "VeriSol.Requires(VeriSol.Old(unfrozen) == true)",
            "VeriSol.Requires(VeriSol.Old(owner) != address(0))",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > 0)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) == 5000000000000000000000000)",
            "VeriSol.Requires(_value > 0)",
            "VeriSol.Requires(msg.value == 0)",
            "VeriSol.Requires(_to != address(0))",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= _value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > _value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) != _value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= msg.value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > msg.value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) != msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) >= _value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > _value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) != _value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) >= msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) != msg.value)",
            "VeriSol.Requires(_value >= msg.value)",
            "VeriSol.Requires(_value > msg.value)",
            "VeriSol.Requires(_value != msg.value)",
            "VeriSol.Requires(_to != msg.sender)"
        ],
        "postconditions": [
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > 0)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == 5000000000000000000000000)",
            "VeriSol.Ensures(unfrozen == true)",
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(totalSupply_ > 0)",
            "VeriSol.Ensures(totalSupply_ == 5000000000000000000000000)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= _value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > _value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) != _value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) != msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(owner) == owner)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) <= totalSupply_)",
            "VeriSol.Ensures(_value <= totalSupply_)",
            "VeriSol.Ensures(_value < totalSupply_)",
            "VeriSol.Ensures(_value != totalSupply_)",
            "VeriSol.Ensures(msg.value <= totalSupply_)",
            "VeriSol.Ensures(msg.value < totalSupply_)",
            "VeriSol.Ensures(msg.value != totalSupply_)"
        ],
        "falsified_preconditions": [
            "VeriSol.Requires(VeriSol.Old(owner) == _to)",
            "VeriSol.Requires(VeriSol.Old(owner) != _to)",
            "VeriSol.Requires(VeriSol.Old(owner) == msg.sender)",
            "VeriSol.Requires(VeriSol.Old(owner) != msg.sender)"
        ],
        "falsified_postconditions": [
            "VeriSol.Ensures(owner == _to)",
            "VeriSol.Ensures(owner != _to)",
            "VeriSol.Ensures(owner == msg.sender)",
            "VeriSol.Ensures(owner != msg.sender)"
        ]
    },
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > 0)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == 5000000000000000000000000)",
            "VeriSol.Requires(VeriSol.Old(unfrozen) == true)",
            "VeriSol.Requires(VeriSol.Old(owner) != address(0))",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > 0)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) == 5000000000000000000000000)",
            "VeriSol.Requires(_value > 0)",
            "VeriSol.Requires(msg.value == 0)",
            "VeriSol.Requires(_to != address(0))",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= _value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > _value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) != _value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= msg.value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > msg.value)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) != msg.value)",
            "VeriSol.Requires(VeriSol.Old(owner) == _to)",
            "VeriSol.Requires(VeriSol.Old(owner) != msg.sender)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) >= _value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > _value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) != _value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) >= msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > msg.value)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) != msg.value)",
            "VeriSol.Requires(_value >= msg.value)",
            "VeriSol.Requires(_value > msg.value)",
            "VeriSol.Requires(_value != msg.value)",
            "VeriSol.Requires(_to != msg.sender)"
        ],
        "postconditions": [
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > 0)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == 5000000000000000000000000)",
            "VeriSol.Ensures(unfrozen == true)",
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(totalSupply_ > 0)",
            "VeriSol.Ensures(totalSupply_ == 5000000000000000000000000)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= _value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > _value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) != _value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) != msg.value)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(owner) == owner)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) <= totalSupply_)",
            "VeriSol.Ensures(_value <= totalSupply_)",
            "VeriSol.Ensures(_value < totalSupply_)",
            "VeriSol.Ensures(_value != totalSupply_)",
            "VeriSol.Ensures(owner == _to)",
            "VeriSol.Ensures(owner != msg.sender)",
            "VeriSol.Ensures(msg.value <= totalSupply_)",
            "VeriSol.Ensures(msg.value < totalSupply_)",
            "VeriSol.Ensures(msg.value != totalSupply_)"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "allowTransfer(_for)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "allowTransfer(_for)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseApproval(_spender,_addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "increaseApproval(_spender,_addedValue)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(_newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "transferOwnership(_newOwner)",
        "type": "PptType.EXIT",
        "executionType": "TxType.REVERSION",
        "preconditions": [],
        "postconditions": [],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(totalSupply_) > 0)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == 5000000000000000000000000)",
            "VeriSol.Requires(VeriSol.Old(owner) != address(0))",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) > 0)",
            "VeriSol.Requires(VeriSol.Old(VeriSol.SumMapping(balances)) == 5000000000000000000000000)",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Requires(VeriSol.Old(totalSupply_) <= VeriSol.Old(VeriSol.SumMapping(balances)))"
        ],
        "postconditions": [
            "VeriSol.Ensures(VeriSol.SumMapping(balances) > 0)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == 5000000000000000000000000)",
            "VeriSol.Ensures(unfrozen == true)",
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(totalSupply_ > 0)",
            "VeriSol.Ensures(totalSupply_ == 5000000000000000000000000)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(owner) == owner)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) >= totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(VeriSol.SumMapping(balances)) <= totalSupply_)"
        ],
        "falsified_preconditions": [
            "VeriSol.Requires(VeriSol.Old(unfrozen) == true)"
        ],
        "falsified_postconditions": []
    }
]