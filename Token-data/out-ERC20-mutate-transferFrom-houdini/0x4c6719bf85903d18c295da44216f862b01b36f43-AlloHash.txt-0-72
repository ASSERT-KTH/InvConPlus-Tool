Invariants with True value:15
Invariants with False value:3

True Invariants:
approve(spender,tokens): Requires msg.sender != address(0)
approve(spender,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
approve(spender,tokens): Ensures tokens == allowed[msg.sender][spender]
approve(spender,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
transfer(to,tokens): Requires msg.sender != address(0)
transfer(to,tokens): Requires tokens <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures VeriSol.Old(VeriSol.SumMapping(balances)) == VeriSol.SumMapping(balances)
transfer(to,tokens): Ensures VeriSol.Old(uint256(decimals)) == decimals
transfer(to,tokens): Ensures balances[msg.sender] <= VeriSol.Old(balances[msg.sender])
transfer(to,tokens): Ensures balances[to] >= tokens
transfer(to,tokens): Ensures balances[to] >= VeriSol.Old(balances[to])
transfer(to,tokens): Ensures VeriSol.Old(_totalSupply) == _totalSupply
AlloHash: Ensures VeriSol.ContractInvariant(_totalSupply == 180000000000000000000000000)
AlloHash: Ensures VeriSol.ContractInvariant(decimals == 18)
AlloHash: Ensures VeriSol.ContractInvariant(_totalSupply > decimals)

False Invariants:
AlloHash: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == 180000000000000000000000000)
AlloHash: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) == _totalSupply)
AlloHash: Ensures VeriSol.ContractInvariant(VeriSol.SumMapping(balances) > decimals)

 // ./gambit_out_transferFrom/mutants/72/verisol_test