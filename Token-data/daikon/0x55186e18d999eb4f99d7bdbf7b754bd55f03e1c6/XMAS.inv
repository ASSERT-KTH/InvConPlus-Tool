Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
XMAS.approve(address,uint256):::EXIT1
this == orig(this)
this._balances == orig(this._balances)
this._allowances == orig(this._allowances)
this._totalSupply == this._decimals
this._totalSupply == msg.value
this._totalSupply == orig(this._totalSupply)
this._totalSupply == orig(this._decimals)
this._totalSupply == orig(msg.value)
this._totalSupply == orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
this._decimals == msg.value
this._decimals == orig(this._totalSupply)
this._decimals == orig(this._decimals)
this._decimals == orig(msg.value)
this._decimals == orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
spender == orig(spender)
value == orig(value)
value == this._allowances[pair(msg.sender,spender)].getSubValue()
msg.sender == orig(msg.sender)
msg.value == orig(this._totalSupply)
msg.value == orig(this._decimals)
msg.value == orig(msg.value)
msg.value == orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this._totalSupply) == orig(this._decimals)
orig(this._totalSupply) == orig(msg.value)
orig(this._totalSupply) == orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
orig(this._decimals) == orig(msg.value)
orig(this._decimals) == orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
orig(value) == this._allowances[pair(msg.sender,spender)].getSubValue()
orig(msg.value) == orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
sum(this._balances[].getValue()) == sum(orig(this._balances[].getValue()))
this._balances == null
this._balances[].getValue() elements >= 0
this._allowances has only one value
this._allowances[].getSubLength() elements == 1
this._totalSupply == 0
this._decimals == 0
value == 115792089237316195423570985008687907853269984665640564039457584007913129639935
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this._allowances[].getSubLength()) elements == 1
orig(this._totalSupply) == 0
orig(this._decimals) == 0
orig(value) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(msg.value) == 0
sum(this._balances[].getValue()) one of { 0, 1000000000000000000000000000000000 }
sum(orig(this._balances[].getValue())) one of { 0, 1000000000000000000000000000000000 }
this._allowances[pair(msg.sender,spender)].getSubValue() == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(this._allowances[post(pair(spender,msg.sender))].getSubValue()) == 0
this._allowances[].getSubLength() > orig(this._allowances[].getSubLength()) (lexically)
this._allowances[].getSubLength() >= orig(this._allowances[].getSubLength()) (lexically)
this._totalSupply < value
this._totalSupply < block.timestamp
this._totalSupply < orig(value)
this._totalSupply < orig(block.timestamp)
this._totalSupply <= sum(this._balances[].getValue())
this._totalSupply < sum(this._allowances[].getSubValue())
this._totalSupply <= sum(orig(this._balances[].getValue()))
this._totalSupply <= sum(orig(this._allowances[].getSubValue()))
this._totalSupply < this._balances[orig(msg.sender)].getValue()
this._totalSupply < this._allowances[pair(msg.sender,spender)].getSubValue()
this._decimals < value
this._decimals < block.timestamp
this._decimals < orig(value)
this._decimals < orig(block.timestamp)
this._decimals <= sum(this._balances[].getValue())
this._decimals < sum(this._allowances[].getSubValue())
this._decimals <= sum(orig(this._balances[].getValue()))
this._decimals <= sum(orig(this._allowances[].getSubValue()))
this._decimals < this._balances[orig(msg.sender)].getValue()
this._decimals < this._allowances[pair(msg.sender,spender)].getSubValue()
value <= sum(this._allowances[].getSubValue())
msg.value < block.timestamp
msg.value < orig(value)
msg.value < orig(block.timestamp)
msg.value <= sum(this._balances[].getValue())
msg.value < sum(this._allowances[].getSubValue())
msg.value <= sum(orig(this._balances[].getValue()))
msg.value <= sum(orig(this._allowances[].getSubValue()))
msg.value < this._balances[orig(msg.sender)].getValue()
msg.value < this._allowances[pair(msg.sender,spender)].getSubValue()
block.timestamp < orig(value)
block.timestamp < sum(this._allowances[].getSubValue())
block.timestamp < this._balances[orig(msg.sender)].getValue()
block.timestamp < this._allowances[pair(msg.sender,spender)].getSubValue()
orig(this._totalSupply) < orig(value)
orig(this._totalSupply) < orig(block.timestamp)
orig(this._totalSupply) <= sum(this._balances[].getValue())
orig(this._totalSupply) < sum(this._allowances[].getSubValue())
orig(this._totalSupply) <= sum(orig(this._balances[].getValue()))
orig(this._totalSupply) <= sum(orig(this._allowances[].getSubValue()))
orig(this._totalSupply) < this._balances[orig(msg.sender)].getValue()
orig(this._totalSupply) < this._allowances[pair(msg.sender,spender)].getSubValue()
orig(this._decimals) < orig(value)
orig(this._decimals) < orig(block.timestamp)
orig(this._decimals) <= sum(this._balances[].getValue())
orig(this._decimals) < sum(this._allowances[].getSubValue())
orig(this._decimals) <= sum(orig(this._balances[].getValue()))
orig(this._decimals) <= sum(orig(this._allowances[].getSubValue()))
orig(this._decimals) < this._balances[orig(msg.sender)].getValue()
orig(this._decimals) < this._allowances[pair(msg.sender,spender)].getSubValue()
orig(spender) != orig(msg.sender)
orig(value) <= sum(this._allowances[].getSubValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) <= sum(this._balances[].getValue())
orig(msg.value) < sum(this._allowances[].getSubValue())
orig(msg.value) <= sum(orig(this._balances[].getValue()))
orig(msg.value) <= sum(orig(this._allowances[].getSubValue()))
orig(msg.value) < this._balances[orig(msg.sender)].getValue()
orig(msg.value) < this._allowances[pair(msg.sender,spender)].getSubValue()
orig(block.timestamp) < sum(this._allowances[].getSubValue())
orig(block.timestamp) < this._balances[orig(msg.sender)].getValue()
orig(block.timestamp) < this._allowances[pair(msg.sender,spender)].getSubValue()
sum(this._balances[].getValue()) < sum(this._allowances[].getSubValue())
sum(this._balances[].getValue()) <= sum(orig(this._allowances[].getSubValue()))
sum(this._balances[].getValue()) < this._allowances[pair(msg.sender,spender)].getSubValue()
sum(this._allowances[].getSubLength()) - sum(orig(this._allowances[].getSubLength())) - 1 == 0
sum(orig(this._balances[].getValue())) <= sum(orig(this._allowances[].getSubValue()))
sum(orig(this._balances[].getValue())) < this._allowances[pair(msg.sender,spender)].getSubValue()
this._balances[orig(msg.sender)].getValue() < this._allowances[pair(msg.sender,spender)].getSubValue()
this._allowances[pair(msg.sender,spender)].getSubValue() > orig(this._allowances[post(pair(spender,msg.sender))].getSubValue())
===========================================================================
XMAS.transfer(address,uint256):::EXIT1
this == orig(this)
this._balances == orig(this._balances)
this._allowances == orig(this._allowances)
this._allowances[].getSubLength() == orig(this._allowances[].getSubLength())
this._totalSupply == this._decimals
this._totalSupply == msg.value
this._totalSupply == orig(this._totalSupply)
this._totalSupply == orig(this._decimals)
this._totalSupply == orig(msg.value)
this._totalSupply == orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue())
this._decimals == msg.value
this._decimals == orig(this._totalSupply)
this._decimals == orig(this._decimals)
this._decimals == orig(msg.value)
this._decimals == orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue())
recipient == orig(recipient)
amount == orig(amount)
msg.sender == orig(msg.sender)
msg.value == orig(this._totalSupply)
msg.value == orig(this._decimals)
msg.value == orig(msg.value)
msg.value == orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this._totalSupply) == orig(this._decimals)
orig(this._totalSupply) == orig(msg.value)
orig(this._totalSupply) == orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue())
orig(this._decimals) == orig(msg.value)
orig(this._decimals) == orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue())
orig(msg.value) == orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue())
sum(this._balances[].getValue()) == sum(orig(this._balances[].getValue()))
sum(this._allowances[].getSubLength()) == sum(orig(this._allowances[].getSubLength()))
sum(this._allowances[].getSubValue()) == sum(orig(this._allowances[].getSubValue()))
this._balances == null
this._balances[].getValue() elements >= 0
this._allowances has only one value
this._allowances[].getSubLength() elements == 1
this._totalSupply == 0
this._decimals == 0
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this._balances[].getValue()) elements >= 0
orig(this._totalSupply) == 0
orig(this._decimals) == 0
orig(msg.value) == 0
sum(this._balances[].getValue()) == 1000000000000000000000000000000000
sum(orig(this._balances[].getValue())) == 1000000000000000000000000000000000
orig(this._allowances[post(pair(recipient,msg.sender))].getSubValue()) == 0
this._totalSupply < amount
this._totalSupply < block.timestamp
this._totalSupply < orig(amount)
this._totalSupply < orig(block.timestamp)
this._totalSupply < sum(this._balances[].getValue())
this._totalSupply < sum(this._allowances[].getSubValue())
this._totalSupply < sum(orig(this._balances[].getValue()))
this._totalSupply < sum(orig(this._allowances[].getSubValue()))
this._totalSupply < this._balances[orig(recipient)].getValue()
this._totalSupply < this._balances[orig(msg.sender)].getValue()
this._totalSupply < orig(this._balances[post(recipient)].getValue())
this._totalSupply < orig(this._balances[post(msg.sender)].getValue())
this._decimals < amount
this._decimals < block.timestamp
this._decimals < orig(amount)
this._decimals < orig(block.timestamp)
this._decimals < sum(this._balances[].getValue())
this._decimals < sum(this._allowances[].getSubValue())
this._decimals < sum(orig(this._balances[].getValue()))
this._decimals < sum(orig(this._allowances[].getSubValue()))
this._decimals < this._balances[orig(recipient)].getValue()
this._decimals < this._balances[orig(msg.sender)].getValue()
this._decimals < orig(this._balances[post(recipient)].getValue())
this._decimals < orig(this._balances[post(msg.sender)].getValue())
amount < sum(this._balances[].getValue())
amount < sum(this._allowances[].getSubValue())
amount < sum(orig(this._balances[].getValue()))
amount < sum(orig(this._allowances[].getSubValue()))
amount <= this._balances[orig(recipient)].getValue()
amount < orig(this._balances[post(msg.sender)].getValue())
msg.value < block.timestamp
msg.value < orig(amount)
msg.value < orig(block.timestamp)
msg.value < sum(this._balances[].getValue())
msg.value < sum(this._allowances[].getSubValue())
msg.value < sum(orig(this._balances[].getValue()))
msg.value < sum(orig(this._allowances[].getSubValue()))
msg.value < this._balances[orig(recipient)].getValue()
msg.value < this._balances[orig(msg.sender)].getValue()
msg.value < orig(this._balances[post(recipient)].getValue())
msg.value < orig(this._balances[post(msg.sender)].getValue())
block.timestamp < orig(amount)
block.timestamp < sum(this._balances[].getValue())
block.timestamp < sum(this._allowances[].getSubValue())
block.timestamp < sum(orig(this._balances[].getValue()))
block.timestamp < sum(orig(this._allowances[].getSubValue()))
block.timestamp < this._balances[orig(recipient)].getValue()
block.timestamp < orig(this._balances[post(recipient)].getValue())
block.timestamp < orig(this._balances[post(msg.sender)].getValue())
orig(this._totalSupply) < orig(amount)
orig(this._totalSupply) < orig(block.timestamp)
orig(this._totalSupply) < sum(this._balances[].getValue())
orig(this._totalSupply) < sum(this._allowances[].getSubValue())
orig(this._totalSupply) < sum(orig(this._balances[].getValue()))
orig(this._totalSupply) < sum(orig(this._allowances[].getSubValue()))
orig(this._totalSupply) < this._balances[orig(recipient)].getValue()
orig(this._totalSupply) < this._balances[orig(msg.sender)].getValue()
orig(this._totalSupply) < orig(this._balances[post(recipient)].getValue())
orig(this._totalSupply) < orig(this._balances[post(msg.sender)].getValue())
orig(this._decimals) < orig(amount)
orig(this._decimals) < orig(block.timestamp)
orig(this._decimals) < sum(this._balances[].getValue())
orig(this._decimals) < sum(this._allowances[].getSubValue())
orig(this._decimals) < sum(orig(this._balances[].getValue()))
orig(this._decimals) < sum(orig(this._allowances[].getSubValue()))
orig(this._decimals) < this._balances[orig(recipient)].getValue()
orig(this._decimals) < this._balances[orig(msg.sender)].getValue()
orig(this._decimals) < orig(this._balances[post(recipient)].getValue())
orig(this._decimals) < orig(this._balances[post(msg.sender)].getValue())
orig(recipient) != orig(msg.sender)
orig(amount) < sum(this._balances[].getValue())
orig(amount) < sum(this._allowances[].getSubValue())
orig(amount) < sum(orig(this._balances[].getValue()))
orig(amount) < sum(orig(this._allowances[].getSubValue()))
orig(amount) <= this._balances[orig(recipient)].getValue()
orig(amount) < orig(this._balances[post(msg.sender)].getValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) < sum(this._balances[].getValue())
orig(msg.value) < sum(this._allowances[].getSubValue())
orig(msg.value) < sum(orig(this._balances[].getValue()))
orig(msg.value) < sum(orig(this._allowances[].getSubValue()))
orig(msg.value) < this._balances[orig(recipient)].getValue()
orig(msg.value) < this._balances[orig(msg.sender)].getValue()
orig(msg.value) < orig(this._balances[post(recipient)].getValue())
orig(msg.value) < orig(this._balances[post(msg.sender)].getValue())
orig(block.timestamp) < sum(this._balances[].getValue())
orig(block.timestamp) < sum(this._allowances[].getSubValue())
orig(block.timestamp) < sum(orig(this._balances[].getValue()))
orig(block.timestamp) < sum(orig(this._allowances[].getSubValue()))
orig(block.timestamp) < this._balances[orig(recipient)].getValue()
orig(block.timestamp) < orig(this._balances[post(recipient)].getValue())
orig(block.timestamp) < orig(this._balances[post(msg.sender)].getValue())
sum(this._balances[].getValue()) < sum(this._allowances[].getSubValue())
sum(this._balances[].getValue()) < sum(orig(this._allowances[].getSubValue()))
this._balances[orig(msg.sender)].getValue() < orig(this._balances[post(msg.sender)].getValue())
amount - this._balances[orig(recipient)].getValue() + orig(this._balances[post(recipient)].getValue()) == 0
amount + this._balances[orig(msg.sender)].getValue() - orig(this._balances[post(msg.sender)].getValue()) == 0
orig(amount) - this._balances[orig(recipient)].getValue() + orig(this._balances[post(recipient)].getValue()) == 0
orig(amount) + this._balances[orig(msg.sender)].getValue() - orig(this._balances[post(msg.sender)].getValue()) == 0
===========================================================================
XMAS.transferFrom(address,address,uint256):::EXIT1
this == orig(this)
this._balances == orig(this._balances)
this._allowances == orig(this._allowances)
this._allowances[].getSubLength() == orig(this._allowances[].getSubLength())
this._totalSupply == this._decimals
this._totalSupply == msg.value
this._totalSupply == orig(msg.value)
this._totalSupply == this._balances[orig(sender)].getValue()
this._totalSupply == orig(this._allowances[post(pair(sender,recipient))].getSubValue())
this._decimals == msg.value
this._decimals == orig(msg.value)
this._decimals == this._balances[orig(sender)].getValue()
this._decimals == orig(this._allowances[post(pair(sender,recipient))].getSubValue())
sender == orig(sender)
recipient == orig(recipient)
amount == orig(amount)
amount == orig(this._balances[post(sender)].getValue())
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == this._balances[orig(sender)].getValue()
msg.value == orig(this._allowances[post(pair(sender,recipient))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(amount) == orig(this._balances[post(sender)].getValue())
orig(msg.value) == this._balances[orig(sender)].getValue()
orig(msg.value) == orig(this._allowances[post(pair(sender,recipient))].getSubValue())
sum(this._allowances[].getSubLength()) == sum(orig(this._allowances[].getSubLength()))
this._balances[orig(sender)].getValue() == orig(this._allowances[post(pair(sender,recipient))].getSubValue())
this._balances == null
this._balances[].getValue() elements >= 0
this._allowances has only one value
this._allowances[].getSubLength() elements == 1
this._totalSupply == 0
this._decimals == 0
amount one of { 26667379294648031637536852238557, 90661089388014913158134036555424, 1000000000000000000000000000000000 }
msg.value == 0
block.timestamp one of { 1667690399, 1667690711, 1667690735 }
orig(this) has only one value
orig(this._balances[].getValue()) elements >= 0
orig(amount) one of { 26667379294648031637536852238557, 90661089388014913158134036555424, 1000000000000000000000000000000000 }
orig(msg.value) == 0
orig(block.timestamp) one of { 1667690399, 1667690711, 1667690735 }
sum(this._balances[].getValue()) == 1000000000000000000000000000000000
sum(this._allowances[].getSubLength()) one of { 1, 15 }
sum(this._allowances[].getSubValue()) one of { 115792089237316195423570985008687907853269983665640564039457584007913129639935, 1736881338559742931353564775130318617799049768867279991909200815323026055805044, 1736881338559742931353564775130318617799049768893947371203848846960562908043601 }
sum(orig(this._balances[].getValue())) one of { 0, 1000000000000000000000000000000000 }
sum(orig(this._allowances[].getSubValue())) one of { 115792089237316195423570985008687907853269984665640564039457584007913129639935, 1736881338559742931353564775130318617799049768893947371203848846960562908043601, 1736881338559742931353564775130318617799049768984608460591863760118696944599025 }
this._balances[orig(sender)].getValue() == 0
this._balances[orig(recipient)].getValue() one of { 748905034505389084527234627435139, 771925230880083224701895527713932, 1000000000000000000000000000000000 }
orig(this._balances[post(sender)].getValue()) one of { 26667379294648031637536852238557, 90661089388014913158134036555424 }
orig(this._balances[post(recipient)].getValue()) one of { 658243945117374171369100590879715, 745257851585435193064358675475375 }
this._allowances[pair(sender,msg.sender)].getSubValue() one of { 115792089237316195423570985008687907853269983665640564039457584007913129639935, 115792089237316195423570985008687907853269984574979474651442670849779093084511, 115792089237316195423570985008687907853269984638973184744809552370376277401378 }
orig(this._allowances[post(pair(sender,recipient))].getSubValue()) == 0
orig(this._allowances[post(pair(sender,msg.sender))].getSubValue()) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
Exiting Daikon.
