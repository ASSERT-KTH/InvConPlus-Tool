[
    {
        "func": "transfer(_to,_value)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(_to != address(0))",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(_value <= VeriSol.Old(balances[msg.sender]))"
        ],
        "postconditions": [
            "VeriSol.Ensures(owner == VeriSol.Old(owner))",
            "VeriSol.Ensures(decimals == VeriSol.Old(uint256(decimals)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(newOwner) == newOwner)",
            "VeriSol.Ensures(initialSupply == VeriSol.Old(initialSupply))",
            "VeriSol.Ensures(_value <= balances[_to])",
            "VeriSol.Ensures(balances[msg.sender] <= VeriSol.Old(balances[msg.sender]))",
            "VeriSol.Ensures(balances[_to] >= VeriSol.Old(balances[_to]))"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "Lock(_holder)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(frozen[_holder]) == false)",
            "VeriSol.Requires(VeriSol.Old(owner) != address(0))",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(VeriSol.Old(owner) == msg.sender)"
        ],
        "postconditions": [
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(frozen[_holder] == true)",
            "VeriSol.Ensures(owner == VeriSol.Old(owner))",
            "VeriSol.Ensures(owner == msg.sender)",
            "VeriSol.Ensures(decimals == VeriSol.Old(uint256(decimals)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(newOwner) == newOwner)",
            "VeriSol.Ensures(initialSupply == VeriSol.Old(initialSupply))"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": "UnLock(_holder)",
        "type": "PptType.EXIT",
        "executionType": "TxType.NORMAL",
        "preconditions": [
            "VeriSol.Requires(VeriSol.Old(owner) != address(0))",
            "VeriSol.Requires(msg.sender != address(0))",
            "VeriSol.Requires(VeriSol.Old(owner) == msg.sender)"
        ],
        "postconditions": [
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(owner == VeriSol.Old(owner))",
            "VeriSol.Ensures(owner == msg.sender)",
            "VeriSol.Ensures(decimals == VeriSol.Old(uint256(decimals)))",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == VeriSol.Old(VeriSol.SumMapping(balances)))",
            "VeriSol.Ensures(VeriSol.Old(totalSupply_) == totalSupply_)",
            "VeriSol.Ensures(VeriSol.Old(newOwner) == newOwner)",
            "VeriSol.Ensures(initialSupply == VeriSol.Old(initialSupply))"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    },
    {
        "func": null,
        "type": "PptType.CONTRACT",
        "executionType": "TxType.NORMAL",
        "preconditions": [],
        "postconditions": [
            "VeriSol.Ensures(owner != address(0))",
            "VeriSol.Ensures(decimals == 0)",
            "VeriSol.Ensures(initialSupply == 1000000000)",
            "VeriSol.Ensures(decimals <= VeriSol.SumMapping(balances))",
            "VeriSol.Ensures(decimals < initialSupply)",
            "VeriSol.Ensures(decimals <= totalSupply_)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) <= initialSupply)",
            "VeriSol.Ensures(VeriSol.SumMapping(balances) == totalSupply_)",
            "VeriSol.Ensures(initialSupply >= totalSupply_)"
        ],
        "falsified_preconditions": [],
        "falsified_postconditions": []
    }
]